<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="" productName="CODESYS" productVersion="CODESYS V3.5 SP18 Patch 2" creationDateTime="2022-11-13T22:10:39.9455479" />
  <contentHeader name="Codesys Code Execution Speed Tests" version="1.0" modificationDateTime="2022-11-13T22:10:25.2848728" organization="TK Automation" author="Toni Kucic">
    <Comment>A collection of programs that measure various execution speeds of code.</Comment>
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation>
          <property name="Author" type="string">Toni Kucic</property>
          <property name="Company" type="string">TK Automation</property>
          <property name="CompiledLibraryCompatibilityVersion" type="string">CODESYS V3.5 SP16</property>
          <property name="Description" type="string">A collection of programs that measure various execution speeds of code.</property>
          <property name="Project" type="string">codesys_code_execution_speedTests</property>
          <property name="Title" type="string">Codesys Code Execution Speed Tests</property>
          <property name="Version" type="version">1.0</property>
        </ProjectInformation>
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="dtTestStruct">
        <baseType>
          <struct>
            <variable name="dummy1">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="255" />
              </initialValue>
            </variable>
            <variable name="Elem1">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="-1" />
              </initialValue>
            </variable>
            <variable name="Id">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="215215126" />
              </initialValue>
            </variable>
            <variable name="IdText">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'Testing for speed'" />
              </initialValue>
            </variable>
            <variable name="dummy2">
              <type>
                <array>
                  <dimension lower="0" upper="11" />
                  <baseType>
                    <DWORD />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="dummy4">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="dummy5">
              <type>
                <string length="255" />
              </type>
              <initialValue>
                <simpleValue value="'Big array'" />
              </initialValue>
            </variable>
            <variable name="dummy6">
              <type>
                <LINT />
              </type>
              <initialValue>
                <simpleValue value="1211212723838939" />
              </initialValue>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>974d87b5-4253-4dd8-af42-02d75fec12db</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="dtBitStruct">
        <baseType>
          <struct>
            <variable name="bit1">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit2">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit3">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit4">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit5">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit6">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit7">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit8">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit9">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit10">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit11">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit12">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit13">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit14">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit15">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
            <variable name="bit16">
              <type>
                <derived name="BIT" />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>18cca70b-ac98-43f3-8ffb-8a51e2e4f4e7</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="dtSpeedTest">
        <baseType>
          <struct>
            <variable name="Results">
              <type>
                <array>
                  <dimension lower="0" upper="9" />
                  <baseType>
                    <derived name="LTIME" />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="Desc">
              <type>
                <string length="255" />
              </type>
            </variable>
            <variable name="AverageExecTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="OldTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="ExecTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>65385f20-c9b3-4afb-b91b-9f5b6a5e2eb7</ObjectId>
          </data>
        </addData>
      </dataType>
    </dataTypes>
    <pous>
      <pou name="x03_FloatingPointOperations" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest3">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest4">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest5">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest6">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest7">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest8">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest9">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="vInteger1">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="1234" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vInteger2">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="4231" />
              </initialValue>
            </variable>
            <variable name="vReal1">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="1234.4231" />
              </initialValue>
            </variable>
            <variable name="vReal2">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="4231.1234" />
              </initialValue>
            </variable>
            <variable name="vInteger3">
              <type>
                <DINT />
              </type>
              <initialValue>
                <simpleValue value="1234" />
              </initialValue>
            </variable>
            <variable name="vInteger4">
              <type>
                <DINT />
              </type>
              <initialValue>
                <simpleValue value="4231" />
              </initialValue>
            </variable>
            <variable name="vResult1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vResult2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vResult3">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="vResult4">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vResult5">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vResult6">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="vResult7">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vResult8">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vResult9">
              <type>
                <DINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult1 := vInteger1 + vInteger2;
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult2 := vReal1 + vReal2;
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CALCULATION C -------------------
vTest3.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult3 := vInteger3 + vInteger4;
END_FOR
vTest3.ExecTime := LTIME() - vTest3.OldTime;

//------------CALCULATION D -------------------
vTest4.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult4 := vInteger1 * vInteger2;
END_FOR
vTest4.ExecTime := LTIME() - vTest4.OldTime;

//------------CALCULATION E -------------------
vTest5.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult5 := vReal1 * vReal2;
END_FOR
vTest5.ExecTime := LTIME() - vTest5.OldTime;

//------------CALCULATION F -------------------
vTest6.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult6 := vInteger3 * vInteger4;
END_FOR
vTest6.ExecTime := LTIME() - vTest6.OldTime;

//------------CALCULATION G -------------------
vTest7.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult7 := vInteger1 / vInteger2;
END_FOR
vTest7.ExecTime := LTIME() - vTest7.OldTime;

//------------CALCULATION H -------------------
vTest8.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult8 := vReal1 / vReal2;
END_FOR
vTest8.ExecTime := LTIME() - vTest8.OldTime;

//------------CALCULATION I -------------------
vTest9.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult9 := vInteger3 / vInteger4;
END_FOR
vTest9.ExecTime := LTIME() - vTest9.OldTime;


//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;
vTest3.Results[vRunsCompleted] := vTest3.ExecTime;
vTest4.Results[vRunsCompleted] := vTest4.ExecTime;
vTest5.Results[vRunsCompleted] := vTest5.ExecTime;
vTest6.Results[vRunsCompleted] := vTest6.ExecTime;
vTest7.Results[vRunsCompleted] := vTest7.ExecTime;
vTest8.Results[vRunsCompleted] := vTest8.ExecTime;
vTest9.Results[vRunsCompleted] := vTest9.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>93cbcdca-7780-47a0-9980-34236baa48b9</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc				:= 'Time to add two integers 1 milion times';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc				:= 'Time to add two reals 1 milion times';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
vTest3.Desc				:= 'Time to add two DINTs (32b INT) 1 milion times';
vTest3.AverageExecTime 	:= calcAvg(vTest3.Results);
vTest4.Desc				:= 'Time to multiply two integers 1 milion times';
vTest4.AverageExecTime 	:= calcAvg(vTest4.Results);
vTest5.Desc				:= 'Time to multiply two reals 1 milion times';
vTest5.AverageExecTime 	:= calcAvg(vTest5.Results);
vTest6.Desc				:= 'Time to multiply two DINTs (32b INT) 1 milion times';
vTest6.AverageExecTime 	:= calcAvg(vTest6.Results);
vTest7.Desc				:= 'Time to divide two integers 1 milion times';
vTest7.AverageExecTime 	:= calcAvg(vTest7.Results);
vTest8.Desc				:= 'Time to divide two reals 1 milion times';
vTest8.AverageExecTime 	:= calcAvg(vTest8.Results);
vTest9.Desc				:= 'Time to divide two DINTs (32b INT) 1 milion times';
vTest9.AverageExecTime 	:= calcAvg(vTest9.Results);
	
vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8ed00d68-6d21-479d-9bfa-1cbb591fa9aa</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="addTwoInts" pouType="function">
        <interface>
          <returnType>
            <INT />
          </returnType>
          <inOutVars>
            <variable name="int1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="int2">
              <type>
                <INT />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">addTwoInts := int1 + int2;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>80915059-aa71-49ba-b84f-ffb0a9f75549</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x04_FunctionOverhead" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest3">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="vInt1">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vInt2">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
            <variable name="vResult1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vResult2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vResult3">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult1 := vInt1 + vInt2;
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult2 := addTwoInts(vInt1, vInt2);
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CALCULATION C -------------------
vTest3.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult3 := addTwoNumbers(vInt1, vInt2);
END_FOR
vTest3.ExecTime := LTIME() - vTest3.OldTime;

//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;
vTest3.Results[vRunsCompleted] := vTest3.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>21ab4a41-c502-42e4-bf95-e430fdaa73b7</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc				:= 'Calculation using just operands, 1 milion times';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc				:= 'Calculation using function, 1 milion times';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
vTest3.Desc				:= 'Calculation using PRG method, 1 milion times';
vTest3.AverageExecTime 	:= calcAvg(vTest3.Results);
	
vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="addTwoNumbers" ObjectId="bec361a3-b449-4cbd-b51d-cb8c313049d9">
              <interface>
                <returnType>
                  <INT />
                </returnType>
                <inputVars>
                  <variable name="int1">
                    <type>
                      <INT />
                    </type>
                  </variable>
                  <variable name="int2">
                    <type>
                      <INT />
                    </type>
                  </variable>
                </inputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">addTwoNumbers := int1 + int2;</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>832e84e3-169c-43aa-8871-b0ef2441ec37</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x01_ImpactOfDynamicArrays" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="vAvgTimeFun">
              <type>
                <derived name="LTIME" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vAvgTimeHardCoded">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTimes">
              <type>
                <array>
                  <dimension lower="0" upper="9" />
                  <baseType>
                    <derived name="LTIME" />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="LTIME#1ms0us0ns" />
                  </value>
                  <value>
                    <simpleValue value="LTIME#2ms0us0ns" />
                  </value>
                  <value>
                    <simpleValue value="LTIME#3ms0us0ns" />
                  </value>
                  <value>
                    <simpleValue value="LTIME#4ms0us0ns" />
                  </value>
                  <value>
                    <simpleValue value="LTIME#5ms0us0ns" />
                  </value>
                  <value>
                    <simpleValue value="LTIME#6ms0us0ns" />
                  </value>
                  <value>
                    <simpleValue value="LTIME#7ms0us0ns" />
                  </value>
                  <value>
                    <simpleValue value="LTIME#8ms0us0ns" />
                  </value>
                  <value>
                    <simpleValue value="LTIME#9ms0us0ns" />
                  </value>
                  <value>
                    <simpleValue value="LTIME#10ms0us0ns" />
                  </value>
                </arrayValue>
              </initialValue>
            </variable>
            <variable name="vTimes2">
              <type>
                <array>
                  <dimension lower="0" upper="9" />
                  <baseType>
                    <derived name="LTIME" />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="LTIME#1ms0us0ns" />
                  </value>
                  <value>
                    <simpleValue value="LTIME#2ms0us0ns" />
                  </value>
                </arrayValue>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vAvgTimeFun := calcAvg(vTimes);
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vAvgTimeHardCoded := calcAvgFixed(vTimes2);
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>c675048f-5aa0-45c3-806e-fa3f7b6ccade</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc				:= 'Time took to run a function using ARRAY[*], 1 milion times';
vTest1.AverageExecTime  := calcAvg(vTest1.Results);

vTest2.Desc				:= 'Time took to run a function using fixed ARRAY[0..9], 1 milion times';
vTest2.AverageExecTime := calcAvg(vTest2.Results);

vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c290fb28-c10d-4c88-ae7d-b83b30f2243a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x06_ShlVsMemCpy" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="vSHRInteger">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vMcpyInteger">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="vBuffer">
              <type>
                <array>
                  <dimension lower="0" upper="1" />
                  <baseType>
                    <USINT />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="16#55" />
                  </value>
                  <value>
                    <simpleValue value="16#AA" />
                  </value>
                </arrayValue>
              </initialValue>
            </variable>
            <variable name="vSHLOldTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vMcpyOldTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vSHLExecTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vMcpyExecTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	//Assemble an UINT from two USINTs using SHR operator
	vSHRInteger := vBuffer[0] + SHL(vBuffer[1],8);
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	//Assemble an UINT from two USINTs using MemCpy
	MEMUtils.MemCpy(pbyDest:= ADR(vMcpyInteger), pbySrc:= ADR(vBuffer) , dwSize:= SIZEOF(vMcpyInteger));
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//Results
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>5664cb8f-8799-4292-bf51-fd94078c7af9</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc				:= 'Assembling an integer from two bytes (SHL), 1 milion times';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc				:= 'Assembling an integer from two bytes (SysMemCpy), 1 milion times';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
	
vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b1c49280-5ef1-440e-9136-31fd5aa516dc</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="calcAVG" pouType="function">
        <interface>
          <returnType>
            <derived name="LTIME" />
          </returnType>
          <inputVars>
            <variable name="Results">
              <type>
                <pointer>
                  <baseType>
                    <derived name="LTIME" />
                  </baseType>
                </pointer>
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="variable_length_array_original_scope" Value="Inout" />
                    <Attribute Name="variable_length_array" Value="ARRAY[*] OF LTIME" />
                    <Attribute Name="Dimensions" Value="1" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <DINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">FOR i:=LOWER_BOUND(Results,1) TO UPPER_BOUND(Results,1) DO
	IF Results[i] = LTIME#0S THEN
		EXIT;
	END_IF
	calcAvg := calcAvg + Results[i];
END_FOR
calcAvg := calcAvg / MAX(1,i);
RETURN;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d361f96d-b405-4f02-94e9-f0734c3f1811</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x05_MemSetVsDataZeero" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
            <variable name="cEmptyStruct">
              <type>
                <derived name="dtTestStruct" />
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="vResultStruct1">
              <type>
                <derived name="dtTestStruct" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test variables</xhtml>
              </documentation>
            </variable>
            <variable name="vResultStruct2">
              <type>
                <derived name="dtTestStruct" />
              </type>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	//RESET STRUCT WITH A EMPTY STRUCT
	vResultStruct1 := cEmptyStruct;
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	//RESET STRUCT WITH MEM SET
	MEMUtils.MemSet(pbyBuffer:= ADR(vResultStruct2), byValue:= 16#0 , dwSize:= SIZEOF(vResultStruct2));
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>428e8d6f-6956-4294-8a2f-bf96435e2fa1</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc				:= 'Setting a struct with an empty struct, 1 milion times';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc				:= 'Setting a struct with SysMemSet, 1 milion times';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b6f25e2b-ec5a-4a35-909a-0f893387acef</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x02_ExecSpeedOfLanguageTypes" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest3">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest4">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="vInt1">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vInt2">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
            <variable name="vResult1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vResult2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vResult3">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vResult4">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult1 := addTwoIntsLadder(vInt1, vInt2);
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult2 := addTwoIntsST(vInt1, vInt2);
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CALCULATION C -------------------
vTest3.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult3 := addTwoIntsFBD(vInt1, vInt2);
END_FOR
vTest3.ExecTime := LTIME() - vTest3.OldTime;

//------------CALCULATION D -------------------
vTest4.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult4 := addTwoIntsCFC(vInt1, vInt2);
END_FOR
vTest4.ExecTime := LTIME() - vTest4.OldTime;

//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;
vTest3.Results[vRunsCompleted] := vTest3.ExecTime;
vTest4.Results[vRunsCompleted] := vTest4.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>b12f24c4-11bf-462f-bab6-6f9040d1116e</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc				:= 'Time function completed in LADDER, 1 milion times';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc				:= 'Time function completed in ST, 1 milion times';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
vTest3.Desc				:= 'Time function completed in FBD, 1 milion times';
vTest3.AverageExecTime 	:= calcAvg(vTest3.Results);
vTest4.Desc				:= 'Time function completed in CFC, 1 milion times';
vTest4.AverageExecTime 	:= calcAvg(vTest3.Results);

vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8b838563-ffa0-4f7f-88df-fdf5ef838e0b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="addTwoIntsLadder" pouType="function">
        <interface>
          <returnType>
            <INT />
          </returnType>
          <inputVars>
            <variable name="Int1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Int2">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <LD>
            <leftPowerRail localId="0">
              <position x="0" y="0" />
              <connectionPointOut formalParameter="none" />
            </leftPowerRail>
            <comment localId="1" height="0" width="0">
              <position x="0" y="0" />
              <content>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </content>
            </comment>
            <vendorElement localId="2">
              <position x="0" y="0" />
              <alternativeText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </alternativeText>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/fbdelementtype" handleUnknown="implementation">
                  <ElementType xmlns="">networktitle</ElementType>
                </data>
              </addData>
            </vendorElement>
            <contact localId="4" negated="false" storage="none" edge="none">
              <position x="0" y="0" />
              <connectionPointIn>
                <connection refLocalId="0" />
              </connectionPointIn>
              <connectionPointOut />
              <variable>TRUE</variable>
            </contact>
            <inVariable localId="5">
              <position x="0" y="0" />
              <connectionPointOut />
              <expression>Int1</expression>
            </inVariable>
            <inVariable localId="6">
              <position x="0" y="0" />
              <connectionPointOut />
              <expression>Int2</expression>
            </inVariable>
            <block localId="3" typeName="ADD">
              <position x="0" y="0" />
              <inputVariables>
                <variable formalParameter="EN">
                  <connectionPointIn>
                    <connection refLocalId="4" />
                  </connectionPointIn>
                </variable>
                <variable formalParameter="In2">
                  <connectionPointIn>
                    <connection refLocalId="5" />
                  </connectionPointIn>
                </variable>
                <variable formalParameter="In3">
                  <connectionPointIn>
                    <connection refLocalId="6" />
                  </connectionPointIn>
                </variable>
              </inputVariables>
              <inOutVariables />
              <outputVariables>
                <variable formalParameter="ENO">
                  <connectionPointOut />
                </variable>
                <variable formalParameter="Out2">
                  <connectionPointOut>
                    <expression>addTwoIntsLadder</expression>
                  </connectionPointOut>
                </variable>
              </outputVariables>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                  <CallType xmlns="">operator</CallType>
                </data>
              </addData>
            </block>
            <rightPowerRail localId="2147483646">
              <position x="0" y="0" />
              <connectionPointIn>
                <connection refLocalId="3" formalParameter="">
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/ldbranchid" handleUnknown="implementation">
                      <BranchId xmlns="">2</BranchId>
                    </data>
                  </addData>
                </connection>
              </connectionPointIn>
            </rightPowerRail>
          </LD>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>81976c27-bae7-4ac7-b3be-5a289cfec6a1</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="addTwoIntsST" pouType="function">
        <interface>
          <returnType>
            <INT />
          </returnType>
          <inputVars>
            <variable name="int1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="int2">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">addTwoIntsST := int1 + int2;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2b669961-88b5-4e2c-8aa0-fcd5ea1dc9c6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="addTwoIntsFBD" pouType="function">
        <interface>
          <returnType>
            <INT />
          </returnType>
          <inputVars>
            <variable name="int1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="int2">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <FBD>
            <vendorElement localId="10000000000">
              <position x="0" y="0" />
              <alternativeText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">FBD Implementation Attributes</xhtml>
              </alternativeText>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/fbd/implementationattributes" handleUnknown="implementation">
                  <fbdattributes xmlns="">
                    <attribute name="BoxInputFlagsSupported" value="true" />
                  </fbdattributes>
                </data>
              </addData>
            </vendorElement>
            <inVariable localId="10000000001">
              <position x="0" y="0" />
              <connectionPointOut />
              <expression>int1</expression>
            </inVariable>
            <inVariable localId="10000000002">
              <position x="0" y="0" />
              <connectionPointOut />
              <expression>int2</expression>
            </inVariable>
            <block localId="10000000003" typeName="ADD">
              <position x="0" y="0" />
              <inputVariables>
                <variable formalParameter="In1">
                  <connectionPointIn>
                    <connection refLocalId="10000000001" />
                  </connectionPointIn>
                </variable>
                <variable formalParameter="In2">
                  <connectionPointIn>
                    <connection refLocalId="10000000002" />
                  </connectionPointIn>
                </variable>
              </inputVariables>
              <inOutVariables />
              <outputVariables>
                <variable formalParameter="Out1">
                  <connectionPointOut />
                </variable>
              </outputVariables>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                  <CallType xmlns="">operator</CallType>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                  <InputParamTypes xmlns="" />
                </data>
                <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                  <OutputParamTypes xmlns="">INT</OutputParamTypes>
                </data>
              </addData>
            </block>
            <outVariable localId="10000000004">
              <position x="0" y="0" />
              <connectionPointIn>
                <connection refLocalId="10000000003" formalParameter="Out1" />
              </connectionPointIn>
              <expression>addTwoIntsFBD</expression>
            </outVariable>
          </FBD>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ff1bd7ca-f894-4734-8c56-cab7f420d3e0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x07_StringOperations" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest3">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest4">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest5">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest6">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="vString1">
              <type>
                <string length="255" />
              </type>
              <initialValue>
                <simpleValue value="'Test string1'" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vString2">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'Test string2'" />
              </initialValue>
            </variable>
            <variable name="vString3">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'a'" />
              </initialValue>
            </variable>
            <variable name="vString4">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'a'" />
              </initialValue>
            </variable>
            <variable name="vByte">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="16#FF" />
              </initialValue>
            </variable>
            <variable name="vArrByte">
              <type>
                <array>
                  <dimension lower="0" upper="255" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vResult1">
              <type>
                <string length="255" />
              </type>
            </variable>
            <variable name="vResult2">
              <type>
                <string />
              </type>
            </variable>
            <variable name="vResult3">
              <type>
                <string />
              </type>
            </variable>
            <variable name="vResult4">
              <type>
                <string length="255" />
              </type>
            </variable>
            <variable name="vResult5">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="vResult6">
              <type>
                <array>
                  <dimension lower="0" upper="255" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vSizes">
              <type>
                <array>
                  <dimension lower="0" upper="3" />
                  <baseType>
                    <UDINT />
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult1 := vString1;
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult2 := vString2;
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CALCULATION C -------------------
vTest3.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult3 := CONCAT(vResult3, vString3);
END_FOR
vTest3.ExecTime := LTIME() - vTest3.OldTime;

//------------CALCULATION D -------------------
vTest4.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult4 := CONCAT(vResult4, vString4);
END_FOR
vTest4.ExecTime := LTIME() - vTest4.OldTime;

//------------CALCULATION E -------------------
vTest5.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult5 := vByte;
END_FOR
vTest5.ExecTime := LTIME() - vTest5.OldTime;

//------------CALCULATION F -------------------
vTest6.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult6 := vArrByte;
END_FOR
vTest6.ExecTime := LTIME() - vTest6.OldTime;

//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;
vTest3.Results[vRunsCompleted] := vTest3.ExecTime;
vTest4.Results[vRunsCompleted] := vTest4.ExecTime;
vTest5.Results[vRunsCompleted] := vTest5.ExecTime;
vTest6.Results[vRunsCompleted] := vTest6.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>8ab04792-ff24-45f9-8b1e-5e6d8d90039c</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;

vSizes[0] := SIZEOF(vString1); //Size is 255 characters + zero char
vSizes[1] := SIZEOF(vString2); //Size is 80 characters + zero char, default if no size specified
vSizes[2] := SIZEOF(vResult3); //Size is 81, even though we concatenated 1 Million characters. The rest were chopped off
vSizes[3] := SIZEOF(vResult4); //Size is expected 256, other 744 characters chopped off

vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc				:= 'Time to copy a string[255] 1 Million times';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc				:= 'Time to copy a string 1 Million times';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
vTest3.Desc				:= 'Time to concatenate 1 Million times characters with STRING';
vTest3.AverageExecTime 	:= calcAvg(vTest3.Results);
vTest4.Desc				:= 'Time to concatenate 1 Million times  characters with STRING[255]';
vTest4.AverageExecTime 	:= calcAvg(vTest4.Results);
vTest5.Desc				:= 'Time to move a byte 1 Million times';
vTest5.AverageExecTime 	:= calcAvg(vTest5.Results);
vTest6.Desc				:= 'Time to copy an array of 255 BYTE 1 Million times';
vTest6.AverageExecTime 	:= calcAvg(vTest6.Results);
	
vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>51d6aac5-a3cf-4c60-a30b-f6b3d35ff875</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x08_CheckingBools" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest3">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest4">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest5">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="vBool">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vResult">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vCounter">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vCastedUint">
              <type>
                <UINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	IF vBool = TRUE THEN
		vResult := vBool;
	END_IF
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	IF vBool THEN
		vResult := vBool;
	END_IF
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CALCULATION C -------------------
vTest3.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	IF vBool THEN
		vCounter := vCounter + 1;
	END_IF
END_FOR
vTest3.ExecTime := LTIME() - vTest3.OldTime;

//------------CALCULATION D -------------------
vTest4.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vCounter := vCounter + BOOL_TO_UINT(vBool);
END_FOR
vTest4.ExecTime := LTIME() - vTest4.OldTime;

//------------CALCULATION D -------------------
vTest5.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vCastedUint := BOOL_TO_UINT(vBool);
END_FOR
vTest5.ExecTime := LTIME() - vTest5.OldTime;

//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;
vTest3.Results[vRunsCompleted] := vTest3.ExecTime;
vTest4.Results[vRunsCompleted] := vTest4.ExecTime;
vTest5.Results[vRunsCompleted] := vTest5.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>aab56a0a-5b36-4ad9-bd34-4e2ea44c6832</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc				:= 'Time to run IF vBool = TRUE THEN 1 Million times';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc				:= 'Time to run IF vBool THEN 1 Million times';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
vTest3.Desc				:= 'Time to increment a counter using if sentence 1 Million times';
vTest3.AverageExecTime 	:= calcAvg(vTest3.Results);
vTest4.Desc				:= 'Time to increment a counter using bool to UINT 1 Million times';
vTest4.AverageExecTime 	:= calcAvg(vTest4.Results);
vTest5.Desc				:= 'Time to cast a bool to UINT 1 Million times';
vTest5.AverageExecTime 	:= calcAvg(vTest5.Results);
	
vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ed37ab8c-e858-41dc-a5e4-96d815c1c338</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x09_CaseVsIfElsif" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest3">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest4">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest5">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest6">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="vFirstIndex">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="15" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vMiddleIndex">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="50" />
              </initialValue>
            </variable>
            <variable name="vLastIndex">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="99" />
              </initialValue>
            </variable>
            <variable name="vResultFirst">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Should be 0</xhtml>
              </documentation>
            </variable>
            <variable name="vResultMiddle">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Should be 50</xhtml>
              </documentation>
            </variable>
            <variable name="vResultLast">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Should be 99</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResultFirst := returnIndexIfElsif(vFirstIndex);
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResultMiddle := returnIndexIfElsif(vMiddleIndex);
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CALCULATION C -------------------
vTest3.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResultLast := returnIndexIfElsif(vLastIndex);
END_FOR
vTest3.ExecTime := LTIME() - vTest3.OldTime;

//------------CALCULATION D -------------------
vTest4.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResultFirst := returnIndexCase(vFirstIndex);
END_FOR
vTest4.ExecTime := LTIME() - vTest4.OldTime;

//------------CALCULATION E -------------------
vTest5.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResultMiddle := returnIndexCase(vMiddleIndex);
END_FOR
vTest5.ExecTime := LTIME() - vTest5.OldTime;

//------------CALCULATION F -------------------
vTest6.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResultLast := returnIndexCase(vLastIndex);
END_FOR
vTest6.ExecTime := LTIME() - vTest6.OldTime;

//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;
vTest3.Results[vRunsCompleted] := vTest3.ExecTime;
vTest4.Results[vRunsCompleted] := vTest4.ExecTime;
vTest5.Results[vRunsCompleted] := vTest5.ExecTime;
vTest6.Results[vRunsCompleted] := vTest6.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>464e96a6-390f-402c-aa0c-5da13403ea1f</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc				:= 'Time to run first branch of IF ELSIF 1 Million times';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc				:= 'Time to run middle branch of IF ELSIF 1 Million times';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
vTest3.Desc				:= 'Time to run last branch of IF ELSIF 1 Million times';
vTest3.AverageExecTime 	:= calcAvg(vTest3.Results);
vTest4.Desc				:= 'Time to run first branch of CASE 1 Million times';
vTest4.AverageExecTime 	:= calcAvg(vTest4.Results);
vTest5.Desc				:= 'Time to run middle branch of CASE 1 Million times';
vTest5.AverageExecTime 	:= calcAvg(vTest5.Results);
vTest6.Desc				:= 'Time to run last branch of CASE 1 Million times';
vTest6.AverageExecTime 	:= calcAvg(vTest6.Results);
	
vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="returnIndexIfElsif" ObjectId="eb9df3a9-9018-4dac-98aa-4ff0ea2db28c">
              <interface>
                <returnType>
                  <INT />
                </returnType>
                <inputVars>
                  <variable name="searchValue">
                    <type>
                      <INT />
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Internal="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF searchValue = 0 THEN
        returnIndexIfElsif:=0;
        RETURN;

ELSIF searchValue = 1 THEN
        returnIndexIfElsif:= 1;
        RETURN;

ELSIF searchValue = 2 THEN
        returnIndexIfElsif:= 2;
        RETURN;

ELSIF searchValue = 3 THEN
        returnIndexIfElsif:= 3;
        RETURN;

ELSIF searchValue = 4 THEN
        returnIndexIfElsif:= 4;
        RETURN;

ELSIF searchValue = 5 THEN
        returnIndexIfElsif:= 5;
        RETURN;

ELSIF searchValue = 6 THEN
        returnIndexIfElsif:= 6;
        RETURN;

ELSIF searchValue = 7 THEN
        returnIndexIfElsif:= 7;
        RETURN;

ELSIF searchValue = 8 THEN
        returnIndexIfElsif:= 8;
        RETURN;

ELSIF searchValue = 9 THEN
        returnIndexIfElsif:= 9;
        RETURN;

ELSIF searchValue = 10 THEN
        returnIndexIfElsif:= 10;
        RETURN;

ELSIF searchValue = 11 THEN
        returnIndexIfElsif:= 11;
        RETURN;

ELSIF searchValue = 12 THEN
        returnIndexIfElsif:= 12;
        RETURN;

ELSIF searchValue = 13 THEN
        returnIndexIfElsif:= 13;
        RETURN;

ELSIF searchValue = 14 THEN
        returnIndexIfElsif:= 14;
        RETURN;

ELSIF searchValue = 15 THEN
        returnIndexIfElsif:= 15;
        RETURN;

ELSIF searchValue = 16 THEN
        returnIndexIfElsif:= 16;
        RETURN;

ELSIF searchValue = 17 THEN
        returnIndexIfElsif:= 17;
        RETURN;

ELSIF searchValue = 18 THEN
        returnIndexIfElsif:= 18;
        RETURN;

ELSIF searchValue = 19 THEN
        returnIndexIfElsif:= 19;
        RETURN;

ELSIF searchValue = 20 THEN
        returnIndexIfElsif:= 20;
        RETURN;

ELSIF searchValue = 21 THEN
        returnIndexIfElsif:= 21;
        RETURN;

ELSIF searchValue = 22 THEN
        returnIndexIfElsif:= 22;
        RETURN;

ELSIF searchValue = 23 THEN
        returnIndexIfElsif:= 23;
        RETURN;

ELSIF searchValue = 24 THEN
        returnIndexIfElsif:= 24;
        RETURN;

ELSIF searchValue = 25 THEN
        returnIndexIfElsif:= 25;
        RETURN;

ELSIF searchValue = 26 THEN
        returnIndexIfElsif:= 26;
        RETURN;

ELSIF searchValue = 27 THEN
        returnIndexIfElsif:= 27;
        RETURN;

ELSIF searchValue = 28 THEN
        returnIndexIfElsif:= 28;
        RETURN;

ELSIF searchValue = 29 THEN
        returnIndexIfElsif:= 29;
        RETURN;

ELSIF searchValue = 30 THEN
        returnIndexIfElsif:= 30;
        RETURN;

ELSIF searchValue = 31 THEN
        returnIndexIfElsif:= 31;
        RETURN;

ELSIF searchValue = 32 THEN
        returnIndexIfElsif:= 32;
        RETURN;

ELSIF searchValue = 33 THEN
        returnIndexIfElsif:= 33;
        RETURN;

ELSIF searchValue = 34 THEN
        returnIndexIfElsif:= 34;
        RETURN;

ELSIF searchValue = 35 THEN
        returnIndexIfElsif:= 35;
        RETURN;

ELSIF searchValue = 36 THEN
        returnIndexIfElsif:= 36;
        RETURN;

ELSIF searchValue = 37 THEN
        returnIndexIfElsif:= 37;
        RETURN;

ELSIF searchValue = 38 THEN
        returnIndexIfElsif:= 38;
        RETURN;

ELSIF searchValue = 39 THEN
        returnIndexIfElsif:= 39;
        RETURN;

ELSIF searchValue = 40 THEN
        returnIndexIfElsif:= 40;
        RETURN;

ELSIF searchValue = 41 THEN
        returnIndexIfElsif:= 41;
        RETURN;

ELSIF searchValue = 42 THEN
        returnIndexIfElsif:= 42;
        RETURN;

ELSIF searchValue = 43 THEN
        returnIndexIfElsif:= 43;
        RETURN;

ELSIF searchValue = 44 THEN
        returnIndexIfElsif:= 44;
        RETURN;

ELSIF searchValue = 45 THEN
        returnIndexIfElsif:= 45;
        RETURN;

ELSIF searchValue = 46 THEN
        returnIndexIfElsif:= 46;
        RETURN;

ELSIF searchValue = 47 THEN
        returnIndexIfElsif:= 47;
        RETURN;

ELSIF searchValue = 48 THEN
        returnIndexIfElsif:= 48;
        RETURN;

ELSIF searchValue = 49 THEN
        returnIndexIfElsif:= 49;
        RETURN;

ELSIF searchValue = 50 THEN
        returnIndexIfElsif:= 50;
        RETURN;

ELSIF searchValue = 51 THEN
        returnIndexIfElsif:= 51;
        RETURN;

ELSIF searchValue = 52 THEN
        returnIndexIfElsif:= 52;
        RETURN;

ELSIF searchValue = 53 THEN
        returnIndexIfElsif:= 53;
        RETURN;

ELSIF searchValue = 54 THEN
        returnIndexIfElsif:= 54;
        RETURN;

ELSIF searchValue = 55 THEN
        returnIndexIfElsif:= 55;
        RETURN;

ELSIF searchValue = 56 THEN
        returnIndexIfElsif:= 56;
        RETURN;

ELSIF searchValue = 57 THEN
        returnIndexIfElsif:= 57;
        RETURN;

ELSIF searchValue = 58 THEN
        returnIndexIfElsif:= 58;
        RETURN;

ELSIF searchValue = 59 THEN
        returnIndexIfElsif:= 59;
        RETURN;

ELSIF searchValue = 60 THEN
        returnIndexIfElsif:= 60;
        RETURN;

ELSIF searchValue = 61 THEN
        returnIndexIfElsif:= 61;
        RETURN;

ELSIF searchValue = 62 THEN
        returnIndexIfElsif:= 62;
        RETURN;

ELSIF searchValue = 63 THEN
        returnIndexIfElsif:= 63;
        RETURN;

ELSIF searchValue = 64 THEN
        returnIndexIfElsif:= 64;
        RETURN;

ELSIF searchValue = 65 THEN
        returnIndexIfElsif:= 65;
        RETURN;

ELSIF searchValue = 66 THEN
        returnIndexIfElsif:= 66;
        RETURN;

ELSIF searchValue = 67 THEN
        returnIndexIfElsif:= 67;
        RETURN;

ELSIF searchValue = 68 THEN
        returnIndexIfElsif:= 68;
        RETURN;

ELSIF searchValue = 69 THEN
        returnIndexIfElsif:= 69;
        RETURN;

ELSIF searchValue = 70 THEN
        returnIndexIfElsif:= 70;
        RETURN;

ELSIF searchValue = 71 THEN
        returnIndexIfElsif:= 71;
        RETURN;

ELSIF searchValue = 72 THEN
        returnIndexIfElsif:= 72;
        RETURN;

ELSIF searchValue = 73 THEN
        returnIndexIfElsif:= 73;
        RETURN;

ELSIF searchValue = 74 THEN
        returnIndexIfElsif:= 74;
        RETURN;

ELSIF searchValue = 75 THEN
        returnIndexIfElsif:= 75;
        RETURN;

ELSIF searchValue = 76 THEN
        returnIndexIfElsif:= 76;
        RETURN;

ELSIF searchValue = 77 THEN
        returnIndexIfElsif:= 77;
        RETURN;

ELSIF searchValue = 78 THEN
        returnIndexIfElsif:= 78;
        RETURN;

ELSIF searchValue = 79 THEN
        returnIndexIfElsif:= 79;
        RETURN;

ELSIF searchValue = 80 THEN
        returnIndexIfElsif:= 80;
        RETURN;

ELSIF searchValue = 81 THEN
        returnIndexIfElsif:= 81;
        RETURN;

ELSIF searchValue = 82 THEN
        returnIndexIfElsif:= 82;
        RETURN;

ELSIF searchValue = 83 THEN
        returnIndexIfElsif:= 83;
        RETURN;

ELSIF searchValue = 84 THEN
        returnIndexIfElsif:= 84;
        RETURN;

ELSIF searchValue = 85 THEN
        returnIndexIfElsif:= 85;
        RETURN;

ELSIF searchValue = 86 THEN
        returnIndexIfElsif:= 86;
        RETURN;

ELSIF searchValue = 87 THEN
        returnIndexIfElsif:= 87;
        RETURN;

ELSIF searchValue = 88 THEN
        returnIndexIfElsif:= 88;
        RETURN;

ELSIF searchValue = 89 THEN
        returnIndexIfElsif:= 89;
        RETURN;

ELSIF searchValue = 90 THEN
        returnIndexIfElsif:= 90;
        RETURN;

ELSIF searchValue = 91 THEN
        returnIndexIfElsif:= 91;
        RETURN;

ELSIF searchValue = 92 THEN
        returnIndexIfElsif:= 92;
        RETURN;

ELSIF searchValue = 93 THEN
        returnIndexIfElsif:= 93;
        RETURN;

ELSIF searchValue = 94 THEN
        returnIndexIfElsif:= 94;
        RETURN;

ELSIF searchValue = 95 THEN
        returnIndexIfElsif:= 95;
        RETURN;

ELSIF searchValue = 96 THEN
        returnIndexIfElsif:= 96;
        RETURN;

ELSIF searchValue = 97 THEN
        returnIndexIfElsif:= 97;
        RETURN;

ELSIF searchValue = 98 THEN
        returnIndexIfElsif:= 98;
        RETURN;

ELSIF searchValue = 99 THEN
        returnIndexIfElsif:= 99;
        RETURN;

END_IF</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="returnIndexCase" ObjectId="7b9ab763-7b82-4534-9222-af160d259531">
              <interface>
                <returnType>
                  <INT />
                </returnType>
                <inputVars>
                  <variable name="searchValue">
                    <type>
                      <INT />
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Internal="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE searchValue OF

        0: returnIndexCase := 0;
        RETURN;

        1: returnIndexCase := 1;
        RETURN;

        2: returnIndexCase := 2;
        RETURN;

        3: returnIndexCase := 3;
        RETURN;

        4: returnIndexCase := 4;
        RETURN;

        5: returnIndexCase := 5;
        RETURN;

        6: returnIndexCase := 6;
        RETURN;

        7: returnIndexCase := 7;
        RETURN;

        8: returnIndexCase := 8;
        RETURN;

        9: returnIndexCase := 9;
        RETURN;

        10: returnIndexCase := 10;
        RETURN;

        11: returnIndexCase := 11;
        RETURN;

        12: returnIndexCase := 12;
        RETURN;

        13: returnIndexCase := 13;
        RETURN;

        14: returnIndexCase := 14;
        RETURN;

        15: returnIndexCase := 15;
        RETURN;

        16: returnIndexCase := 16;
        RETURN;

        17: returnIndexCase := 17;
        RETURN;

        18: returnIndexCase := 18;
        RETURN;

        19: returnIndexCase := 19;
        RETURN;

        20: returnIndexCase := 20;
        RETURN;

        21: returnIndexCase := 21;
        RETURN;

        22: returnIndexCase := 22;
        RETURN;

        23: returnIndexCase := 23;
        RETURN;

        24: returnIndexCase := 24;
        RETURN;

        25: returnIndexCase := 25;
        RETURN;

        26: returnIndexCase := 26;
        RETURN;

        27: returnIndexCase := 27;
        RETURN;

        28: returnIndexCase := 28;
        RETURN;

        29: returnIndexCase := 29;
        RETURN;

        30: returnIndexCase := 30;
        RETURN;

        31: returnIndexCase := 31;
        RETURN;

        32: returnIndexCase := 32;
        RETURN;

        33: returnIndexCase := 33;
        RETURN;

        34: returnIndexCase := 34;
        RETURN;

        35: returnIndexCase := 35;
        RETURN;

        36: returnIndexCase := 36;
        RETURN;

        37: returnIndexCase := 37;
        RETURN;

        38: returnIndexCase := 38;
        RETURN;

        39: returnIndexCase := 39;
        RETURN;

        40: returnIndexCase := 40;
        RETURN;

        41: returnIndexCase := 41;
        RETURN;

        42: returnIndexCase := 42;
        RETURN;

        43: returnIndexCase := 43;
        RETURN;

        44: returnIndexCase := 44;
        RETURN;

        45: returnIndexCase := 45;
        RETURN;

        46: returnIndexCase := 46;
        RETURN;

        47: returnIndexCase := 47;
        RETURN;

        48: returnIndexCase := 48;
        RETURN;

        49: returnIndexCase := 49;
        RETURN;

        50: returnIndexCase := 50;
        RETURN;

        51: returnIndexCase := 51;
        RETURN;

        52: returnIndexCase := 52;
        RETURN;

        53: returnIndexCase := 53;
        RETURN;

        54: returnIndexCase := 54;
        RETURN;

        55: returnIndexCase := 55;
        RETURN;

        56: returnIndexCase := 56;
        RETURN;

        57: returnIndexCase := 57;
        RETURN;

        58: returnIndexCase := 58;
        RETURN;

        59: returnIndexCase := 59;
        RETURN;

        60: returnIndexCase := 60;
        RETURN;

        61: returnIndexCase := 61;
        RETURN;

        62: returnIndexCase := 62;
        RETURN;

        63: returnIndexCase := 63;
        RETURN;

        64: returnIndexCase := 64;
        RETURN;

        65: returnIndexCase := 65;
        RETURN;

        66: returnIndexCase := 66;
        RETURN;

        67: returnIndexCase := 67;
        RETURN;

        68: returnIndexCase := 68;
        RETURN;

        69: returnIndexCase := 69;
        RETURN;

        70: returnIndexCase := 70;
        RETURN;

        71: returnIndexCase := 71;
        RETURN;

        72: returnIndexCase := 72;
        RETURN;

        73: returnIndexCase := 73;
        RETURN;

        74: returnIndexCase := 74;
        RETURN;

        75: returnIndexCase := 75;
        RETURN;

        76: returnIndexCase := 76;
        RETURN;

        77: returnIndexCase := 77;
        RETURN;

        78: returnIndexCase := 78;
        RETURN;

        79: returnIndexCase := 79;
        RETURN;

        80: returnIndexCase := 80;
        RETURN;

        81: returnIndexCase := 81;
        RETURN;

        82: returnIndexCase := 82;
        RETURN;

        83: returnIndexCase := 83;
        RETURN;

        84: returnIndexCase := 84;
        RETURN;

        85: returnIndexCase := 85;
        RETURN;

        86: returnIndexCase := 86;
        RETURN;

        87: returnIndexCase := 87;
        RETURN;

        88: returnIndexCase := 88;
        RETURN;

        89: returnIndexCase := 89;
        RETURN;

        90: returnIndexCase := 90;
        RETURN;

        91: returnIndexCase := 91;
        RETURN;

        92: returnIndexCase := 92;
        RETURN;

        93: returnIndexCase := 93;
        RETURN;

        94: returnIndexCase := 94;
        RETURN;

        95: returnIndexCase := 95;
        RETURN;

        96: returnIndexCase := 96;
        RETURN;

        97: returnIndexCase := 97;
        RETURN;

        98: returnIndexCase := 98;
        RETURN;

        99: returnIndexCase := 99;
        RETURN;

END_CASE</xhtml>
                </ST>
              </body>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0f0586c3-201e-474f-b21b-0093897de039</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x10_1_BitAccess" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest3">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="vCodesysBits">
              <type>
                <derived name="dtBitStruct" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vNormalInt">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="16#5555" />
              </initialValue>
            </variable>
            <variable name="vResult1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vResult2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vResult3">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult1 := checkBit_bitStruct(vCodesysBits,2);
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult2 := checkBit_dotNot(vNormalInt,2);
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CALCULATION C -------------------
vTest3.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vResult3 := checkBit_bitmask(vNormalInt, 2);
END_FOR
vTest3.ExecTime := LTIME() - vTest3.OldTime;

//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;
vTest3.Results[vRunsCompleted] := vTest3.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>e45ffa84-7228-4c2f-81da-6b2a7f93ffb5</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc				:= 'Time to access bit 3 1 Million times in codesys bit struct';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc				:= 'Time to access bit 3 1 Million times in normal integer using . notation';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
vTest3.Desc				:= 'Time to access bit 3 1 Million times in normal integer using bit masking';
vTest3.AverageExecTime 	:= calcAvg(vTest3.Results);
	
vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>55b1e25e-0d71-42e6-8b7f-259c215c353b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x10_3_BitMath" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest3">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="vCodesysBits">
              <type>
                <derived name="dtBitStruct" />
              </type>
              <initialValue>
                <structValue>
                  <value member="bit1">
                    <simpleValue value="TRUE" />
                  </value>
                  <value member="bit2">
                    <simpleValue value="TRUE" />
                  </value>
                  <value member="bit3">
                    <simpleValue value="FALSE" />
                  </value>
                </structValue>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vNormalInt">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="2#11" />
              </initialValue>
            </variable>
            <variable name="vNormalInt2">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="2#11" />
              </initialValue>
            </variable>
            <variable name="vNormalInt3">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="2#11" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	setBitToValue_bitStruct(vCodesysBits, 2, checkBit_bitStruct(vCodesysBits, 0) AND checkBit_bitStruct(vCodesysBits, 1));
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	setBitToValue_dotNot(vNormalInt, 2, checkBit_dotNot(vNormalInt, 0) AND checkBit_dotNot(vNormalInt, 1));
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CALCULATION C -------------------
vTest3.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	setBitTovalue_bitmask(vNormalInt2, 2, checkBit_bitmask(vNormalInt2, 0) AND checkBit_bitmask(vNormalInt2, 1));
END_FOR
vTest3.ExecTime := LTIME() - vTest3.OldTime;


//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;
vTest3.Results[vRunsCompleted] := vTest3.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>d094627d-fd6c-43dc-b8a3-0d89f6559c41</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc				:= 'Time to and two bits and save it to another bit 1 Million times using codesys bit struct';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc				:= 'Time to and two bits and save it to another bit 1 Million times using . notation';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
vTest3.Desc				:= 'Time to and two bits and save it to another bit 1 Million times using bit masking';
vTest3.AverageExecTime 	:= calcAvg(vTest3.Results);
	
vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>07b9ee7c-3208-404a-96fe-4da4d87dcecd</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x10_2_BitSet" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest3">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="vCodesysBits">
              <type>
                <derived name="dtBitStruct" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vNormalInt">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="16#0" />
              </initialValue>
            </variable>
            <variable name="vNormalInt2">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="16#0" />
              </initialValue>
            </variable>
            <variable name="vNormalInt3">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="16#0" />
              </initialValue>
            </variable>
            <variable name="vResult1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vResult2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vResult3">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	setBit_bitStruct(vCodesysBits, 2);
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	setBit_dotNot(vNormalInt, 2);
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CALCULATION C -------------------
vTest3.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	setBit_bitmask(vNormalInt2, 2);
END_FOR
vTest3.ExecTime := LTIME() - vTest3.OldTime;

//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;
vTest3.Results[vRunsCompleted] := vTest3.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>9ff6ba78-d184-45dc-bba4-a57f28868237</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc				:= 'Time to set bit 3, 1 Million times in codesys bit struct';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc				:= 'Time to set bit 3, 1 Million times in normal integer using . notation';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
vTest3.Desc				:= 'Time to set bit 3, 1 Million times in normal integer using bit masking';
vTest3.AverageExecTime 	:= calcAvg(vTest3.Results);
	
vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ff2e3e10-a7bd-4ef8-992f-e201ee8b44f5</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="checkBit_bitmask" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="bits">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="bitToCheck">
              <type>
                <USINT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">checkBit_bitmask := (bits AND SHL(1, bitToCheck)) &lt;&gt; 0;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1410a64b-5933-4e93-81df-c546f078612e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="setBit_bitmask" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inOutVars>
            <variable name="bits">
              <type>
                <UINT />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="bitToSet">
              <type>
                <USINT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">bits := bits OR SHL(UINT#1, bitToSet);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>08e5ad85-d29d-43b7-84f8-ef01e7d5504b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="clearBit_bitmask" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inOutVars>
            <variable name="bits">
              <type>
                <UINT />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="bitToClear">
              <type>
                <USINT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">bits := bits AND NOT SHL(UINT#1, bitToClear-1);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a5ac315e-6fee-41fd-9fe0-b5d61f96492b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="setBitToValue_bitmask" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inOutVars>
            <variable name="bits">
              <type>
                <UINT />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="bitToSet">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="value">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF value THEN
	setBit_bitmask(bits, bitToSet);
ELSE
	clearBit_bitmask(bits, bitToSet);
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>67294dfb-3392-43d5-801e-1d31b7ad7628</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="setBit_dotNot" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inOutVars>
            <variable name="bits">
              <type>
                <UINT />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="bitToSet">
              <type>
                <USINT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE bitToSet OF
	0: bits.0 := TRUE;
	1: bits.1 := TRUE;
	2: bits.2 := TRUE;
	3: bits.3 := TRUE;
	4: bits.4 := TRUE;
	5: bits.5 := TRUE;
	6: bits.6 := TRUE;
	7: bits.7 := TRUE;
	8: bits.8 := TRUE;
	9: bits.9 := TRUE;
	10: bits.10 := TRUE;
	11: bits.11 := TRUE;
	12: bits.12 := TRUE;
	13: bits.13 := TRUE;
	14: bits.14 := TRUE;
	15: bits.15 := TRUE;
END_CASE</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d6c6c8e6-a8cc-4650-93c7-93548a570652</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="checkBit_dotNot" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="bits">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="bitToCheck">
              <type>
                <USINT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE bitToCheck OF
	0: checkBit_dotNot := bits.0;
	1: checkBit_dotNot := bits.1;
	2: checkBit_dotNot := bits.2;
	3: checkBit_dotNot := bits.3;
	4: checkBit_dotNot := bits.4;
	5: checkBit_dotNot := bits.5;
	6: checkBit_dotNot := bits.6;
	7: checkBit_dotNot := bits.7;
	8: checkBit_dotNot := bits.8;
	9: checkBit_dotNot := bits.9;
	10: checkBit_dotNot := bits.10;
	11: checkBit_dotNot := bits.11;
	12: checkBit_dotNot := bits.12;
	13: checkBit_dotNot := bits.13;
	14: checkBit_dotNot := bits.14;
	15: checkBit_dotNot := bits.15;
END_CASE</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b12efb6a-31f4-4685-9b74-6773013cef76</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="clearBit_dotNot" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inOutVars>
            <variable name="bits">
              <type>
                <UINT />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="bitToClear">
              <type>
                <USINT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE bitToClear OF
	0: bits.0 := FALSE;
	1: bits.1 := FALSE;
	2: bits.2 := FALSE;
	3: bits.3 := FALSE;
	4: bits.4 := FALSE;
	5: bits.5 := FALSE;
	6: bits.6 := FALSE;
	7: bits.7 := FALSE;
	8: bits.8 := FALSE;
	9: bits.9 := FALSE;
	10: bits.10 := FALSE;
	11: bits.11 := FALSE;
	12: bits.12 := FALSE;
	13: bits.13 := FALSE;
	14: bits.14 := FALSE;
	15: bits.15 := FALSE;
END_CASE</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1e488c7a-35c5-4876-9f6f-248de83ba132</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="checkBit_bitStruct" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="bits">
              <type>
                <derived name="dtBitStruct" />
              </type>
            </variable>
            <variable name="bitToCheck">
              <type>
                <USINT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE bitToCheck OF
	0: checkBit_bitStruct := bits.bit1;
	1: checkBit_bitStruct := bits.bit2;
	2: checkBit_bitStruct := bits.bit3;
	3: checkBit_bitStruct := bits.bit4;
	4: checkBit_bitStruct := bits.bit5;
	5: checkBit_bitStruct := bits.bit6;
	6: checkBit_bitStruct := bits.bit7;
	7: checkBit_bitStruct := bits.bit8;
	8: checkBit_bitStruct := bits.bit9;
	9: checkBit_bitStruct := bits.bit10;
	10: checkBit_bitStruct := bits.bit11;
	11: checkBit_bitStruct := bits.bit12;
	12: checkBit_bitStruct := bits.bit13;
	13: checkBit_bitStruct := bits.bit14;
	14: checkBit_bitStruct := bits.bit15;
	15: checkBit_bitStruct := bits.bit16;
END_CASE</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>dd822e65-2c99-4348-a2c9-652be475a596</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="clearBit_bitStruct" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inOutVars>
            <variable name="bits">
              <type>
                <derived name="dtBitStruct" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="bitToClear">
              <type>
                <USINT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE bitToClear OF
	0: bits.bit1 := FALSE;
	1: bits.bit2 := FALSE;
	2: bits.bit3 := FALSE;
	3: bits.bit4 := FALSE;
	4: bits.bit5 := FALSE;
	5: bits.bit6 := FALSE;
	6: bits.bit7 := FALSE;
	7: bits.bit8 := FALSE;
	8: bits.bit9 := FALSE;
	9: bits.bit10 := FALSE;
	10: bits.bit11 := FALSE;
	11: bits.bit12 := FALSE;
	12: bits.bit13 := FALSE;
	13: bits.bit14 := FALSE;
	14: bits.bit15 := FALSE;
	15: bits.bit16 := FALSE;
END_CASE</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5cac58e1-cd70-470f-8830-a8d7f4f859bc</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="setBit_bitStruct" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inOutVars>
            <variable name="bits">
              <type>
                <derived name="dtBitStruct" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="bitToSet">
              <type>
                <USINT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE bitToSet OF
	0: bits.bit1 := TRUE;
	1: bits.bit2 := TRUE;
	2: bits.bit3 := TRUE;
	3: bits.bit4 := TRUE;
	4: bits.bit5 := TRUE;
	5: bits.bit6 := TRUE;
	6: bits.bit7 := TRUE;
	7: bits.bit8 := TRUE;
	8: bits.bit9 := TRUE;
	9: bits.bit10 := TRUE;
	10: bits.bit11 := TRUE;
	11: bits.bit12 := TRUE;
	12: bits.bit13 := TRUE;
	13: bits.bit14 := TRUE;
	14: bits.bit15 := TRUE;
	15: bits.bit16 := TRUE;
END_CASE</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e2299132-fdf6-41ce-a918-94975bae8dca</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="setBitToValue_bitStruct" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inOutVars>
            <variable name="bits">
              <type>
                <derived name="dtBitStruct" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="bitToSet">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="value">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF value THEN
	setBit_bitStruct(bits, bitToSet);
ELSE
	clearBit_bitStruct(bits, bitToSet);
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8301b7b6-0574-4fd5-8ec5-2a574edf7903</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="setBitToValue_dotNot" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inOutVars>
            <variable name="bits">
              <type>
                <UINT />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="bitToSet">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="value">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF value THEN
	setBit_dotNot(bits, bitToSet);
ELSE
	clearBit_dotNot(bits, bitToSet);
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>79f63c46-1373-4270-b495-53c4d47f0d90</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="speedRunner" pouType="program">
        <interface>
          <localVars>
            <variable name="vTimeToRunTests">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vRunAll">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Run tests one by one from the visu*)
(*or press the run all button*)
(*When run all is pressed, we must re trigger the event loop
also all these tests must run one by one
if run cyclically it messes up the total time*)
IF vRunAll THEN
	x01_ImpactOfDynamicArrays.vStart 	:= NOT x01_ImpactOfDynamicArrays.vDone;
	x02_ExecSpeedOfLanguageTypes.vStart := x01_ImpactOfDynamicArrays.vDone 		AND NOT x02_ExecSpeedOfLanguageTypes.vDone;
	x03_FloatingPointOperations.vStart 	:= x02_ExecSpeedOfLanguageTypes.vDone 	AND NOT x03_FloatingPointOperations.vDone;
	x04_FunctionOverhead.vStart 		:= x03_FloatingPointOperations.vDone 	AND NOT x04_FunctionOverhead.vDone;
	x05_MemSetVsDataZeero.vStart 		:= x04_FunctionOverhead.vDone 			AND NOT x05_MemSetVsDataZeero.vDone;
	x06_ShlVsMemCpy.vStart 				:= x05_MemSetVsDataZeero.vDone 			AND NOT x06_ShlVsMemCpy.vDone;
	x07_StringOperations.vStart 		:= x06_ShlVsMemCpy.vDone 				AND NOT x07_StringOperations.vDone;
	x08_CheckingBools.vStart 			:= x07_StringOperations.vDone			AND NOT x08_CheckingBools.vDone;
	x09_CaseVsIfElsif.vStart 			:= x08_CheckingBools.vDone 				AND NOT x09_CaseVsIfElsif.vDone;
	x10_1_BitAccess.vStart 				:= x09_CaseVsIfElsif.vDone 				AND NOT x10_1_BitAccess.vDone;
	x10_2_BitSet.vStart 				:= x10_1_BitAccess.vDone 				AND NOT x10_2_BitSet.vDone;
	x10_3_BitMath.vStart 				:= x10_2_BitSet.vDone 					AND NOT x10_3_BitMath.vDone;
	x11_CalcInForLoppDecl.vStart 		:= x10_3_BitMath.vDone 					AND NOT x11_CalcInForLoppDecl.vDone;
	x12_BoolArrayToByteArray.vStart 	:= x11_CalcInForLoppDecl.vDone 			AND NOT x12_BoolArrayToByteArray.vDone;
	x13_ByteArrayToBool32.vStart 		:= x12_BoolArrayToByteArray.vDone 		AND NOT x13_ByteArrayToBool32.vDone;
END_IF

vTimeToRunTests :=  x01_ImpactOfDynamicArrays.vTotalTime + x02_ExecSpeedOfLanguageTypes.vTotalTime
					+ x03_FloatingPointOperations.vTotalTime + x04_FunctionOverhead.vTotalTime
					+ x05_MemSetVsDataZeero.vTotalTime + x06_ShlVsMemCpy.vTotalTime
					+ x07_StringOperations.vTotalTime + x08_CheckingBools.vTotalTime
					+ x09_CaseVsIfElsif.vTotalTime + x10_1_BitAccess.vTotalTime
					+ x10_2_BitSet.vTotalTime + x10_3_BitMath.vTotalTime + x11_CalcInForLoppDecl.vTotalTime
					+ x12_BoolArrayToByteArray.vTotalTime + x13_ByteArrayToBool32.vTotalTime;
					

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>45bae081-d3b4-42ae-ac00-ec9afd7d0163</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="calcMIPS" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <localVars>
            <variable name="vMIPSOldTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="vTestInt">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="vMIPSExecTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Calculate MIPS*)
vMIPSOldTime := LTIME();
FOR i:=1 TO 1000000 DO
	vTestInt := vTestInt + 1;
END_FOR
vMIPSExecTime := LTIME() - vMIPSOldTime;

(*Take a ratio of how long it took to add 1 milion integers, against 1 second, then divide by a milion to get MIPS(milion of integer additions per sec*)
calcMIPS := (vTestInt *  (1000000000.0 / LTIME_TO_REAL(vMIPSExecTime))) / 1000000.0;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>62bde692-16ea-41fa-843c-03c01b127ac5</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="calcFLOPS" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <localVars>
            <variable name="vFLOPSOldTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTestReal">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vFLOPSExecTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vMIPSAsReal">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="i">
              <type>
                <DINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Calculate FLOPS*)
vFLOPSOldTime := LTIME();
FOR i:=1 TO 1000000 DO
	vTestReal := vTestReal + 1.0;
END_FOR
vFLOPSExecTime := LTIME() - vFLOPSOldTime;

(*Take a ratio of how long it took to add 1 milion reals, against 1 second, then divide by a milion to get FLOPS(milion of floating point additions per sec*)
calcFLOPS := vTestReal *  (1000000000.0 / LTIME_TO_REAL(vFLOPSExecTime));</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>035c77cc-f4dd-431c-b736-ab56a3b26207</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x11_CalcInForLoppDecl" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="10000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">10 thousand times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest3">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="j">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vLongString">
              <type>
                <string length="108" />
              </type>
              <initialValue>
                <simpleValue value="'123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789'" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vResult">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="vLenOfString">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	FOR j:= 0 TO 108 DO
		vResult := vLongString[j];
	END_FOR
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	FOR j:= 0 TO LEN(vLongString) DO
		vResult := vLongString[j];
	END_FOR
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CALCULATION C -------------------
vTest3.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vLenOfString := LEN(vLongString);
	FOR j:= 0 TO vLenOfString DO
		vResult := vLongString[j];
	END_FOR
END_FOR
vTest3.ExecTime := LTIME() - vTest3.OldTime;

//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;
vTest3.Results[vRunsCompleted] := vTest3.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>c2344213-3d0a-494f-b6da-f0287613fd3e</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc 			:= 'Time to iterate over bytes of a string[108] using known size, 10 thousand times';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc 			:= 'Time to iterate over bytes of a string[108] using calculation in declaration, 10 thousand times';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
vTest3.Desc 			:= 'Time to iterate over bytes of a STRING[108] using calculation outside OF the declaration, 10 thousand times';
vTest3.AverageExecTime 	:= calcAvg(vTest3.Results);
	
vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0d36a265-629d-4737-a080-598f91f7a935</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x12_BoolArrayToByteArray" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest3">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest4">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest5">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest6">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest7">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="j">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vBoolArr">
              <type>
                <array>
                  <dimension lower="1" upper="32" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vBytes1">
              <type>
                <array>
                  <dimension lower="1" upper="4" />
                  <baseType>
                    <USINT />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vBytes2">
              <type>
                <array>
                  <dimension lower="1" upper="4" />
                  <baseType>
                    <USINT />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vBytes3">
              <type>
                <array>
                  <dimension lower="1" upper="4" />
                  <baseType>
                    <USINT />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vBytes4">
              <type>
                <array>
                  <dimension lower="1" upper="4" />
                  <baseType>
                    <UINT />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vBytes5">
              <type>
                <array>
                  <dimension lower="1" upper="4" />
                  <baseType>
                    <UINT />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vBytes6">
              <type>
                <array>
                  <dimension lower="1" upper="4" />
                  <baseType>
                    <USINT />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vBytes7">
              <type>
                <array>
                  <dimension lower="1" upper="4" />
                  <baseType>
                    <USINT />
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vBytes1 := BOOLARR_TO_BYTES(vBoolArr);
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vBytes2[1].0 := vBoolArr[1];
	vBytes2[1].1 := vBoolArr[2];
	vBytes2[1].2 := vBoolArr[3];
	vBytes2[1].3 := vBoolArr[4];
	vBytes2[1].4 := vBoolArr[5];
	vBytes2[1].5 := vBoolArr[6];
	vBytes2[1].6 := vBoolArr[7];
	vBytes2[1].7 := vBoolArr[8];
	
	vBytes2[2].0 := vBoolArr[9];
	vBytes2[2].1 := vBoolArr[10];
	vBytes2[2].2 := vBoolArr[11];
	vBytes2[2].3 := vBoolArr[12];
	vBytes2[2].4 := vBoolArr[13];
	vBytes2[2].5 := vBoolArr[14];
	vBytes2[2].6 := vBoolArr[15];
	vBytes2[2].7 := vBoolArr[16];
	
	vBytes2[3].0 := vBoolArr[17];
	vBytes2[3].1 := vBoolArr[18];
	vBytes2[3].2 := vBoolArr[19];
	vBytes2[3].3 := vBoolArr[20];
	vBytes2[3].4 := vBoolArr[21];
	vBytes2[3].5 := vBoolArr[22];
	vBytes2[3].6 := vBoolArr[23];
	vBytes2[3].7 := vBoolArr[24];
	
	vBytes2[4].0 := vBoolArr[25];
	vBytes2[4].1 := vBoolArr[26];
	vBytes2[4].2 := vBoolArr[27];
	vBytes2[4].3 := vBoolArr[28];
	vBytes2[4].4 := vBoolArr[29];
	vBytes2[4].5 := vBoolArr[30];
	vBytes2[4].6 := vBoolArr[31];
	vBytes2[4].7 := vBoolArr[32];
END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CALCULATION C -------------------
vTest3.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	FOR j:=1 TO 4 DO
		vBytes3[j].0 := vBoolArr[1 + ((j-1) * 8)]; //1,9, 17, 25
		vBytes3[j].1 := vBoolArr[2 + ((j-1) * 8)];
		vBytes3[j].2 := vBoolArr[3 + ((j-1) * 8)];
		vBytes3[j].3 := vBoolArr[4 + ((j-1) * 8)];
		vBytes3[j].4 := vBoolArr[5 + ((j-1) * 8)];
		vBytes3[j].5 := vBoolArr[6 + ((j-1) * 8)]; //6, 14, 22, 30
		vBytes3[j].6 := vBoolArr[7 + ((j-1) * 8)]; //7, 15, 23, 31
		vBytes3[j].7 := vBoolArr[8 + ((j-1) * 8)]; //8, 16, 24, 32
	END_FOR
END_FOR
vTest3.ExecTime := LTIME() - vTest3.OldTime;

vTest4.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	setBitToValue_bitmask(vBytes4[1], 1, vBoolArr[1]);
	setBitToValue_bitmask(vBytes4[1], 2 ,vBoolArr[2]);
	setBitToValue_bitmask(vBytes4[1], 3,vBoolArr[3]);
	setBitToValue_bitmask(vBytes4[1], 4,vBoolArr[4]);
	setBitToValue_bitmask(vBytes4[1], 5,vBoolArr[5]);
	setBitToValue_bitmask(vBytes4[1], 6,vBoolArr[6]);
	setBitToValue_bitmask(vBytes4[1], 7,vBoolArr[7]);
	setBitToValue_bitmask(vBytes4[1], 8,vBoolArr[8]);
	
	setBitToValue_bitmask(vBytes4[2], 1,vBoolArr[9]);
	setBitToValue_bitmask(vBytes4[2], 2,vBoolArr[10]);
	setBitToValue_bitmask(vBytes4[2], 3,vBoolArr[11]);
	setBitToValue_bitmask(vBytes4[2], 4,vBoolArr[12]);
	setBitToValue_bitmask(vBytes4[2], 5,vBoolArr[13]);
	setBitToValue_bitmask(vBytes4[2], 6,vBoolArr[14]);
	setBitToValue_bitmask(vBytes4[2], 7,vBoolArr[15]);
	setBitToValue_bitmask(vBytes4[2], 8,vBoolArr[16]);
	
	setBitToValue_bitmask(vBytes4[3], 1,vBoolArr[17]);
	setBitToValue_bitmask(vBytes4[3], 2,vBoolArr[18]);
	setBitToValue_bitmask(vBytes4[3], 3,vBoolArr[19]);
	setBitToValue_bitmask(vBytes4[3], 4,vBoolArr[20]);
	setBitToValue_bitmask(vBytes4[3], 5,vBoolArr[21]);
	setBitToValue_bitmask(vBytes4[3], 6,vBoolArr[22]);
	setBitToValue_bitmask(vBytes4[3], 7,vBoolArr[23]);
	setBitToValue_bitmask(vBytes4[3], 8,vBoolArr[24]);
	
	setBitToValue_bitmask(vBytes4[4], 1,vBoolArr[25]);
	setBitToValue_bitmask(vBytes4[4], 2,vBoolArr[26]);
	setBitToValue_bitmask(vBytes4[4], 3,vBoolArr[27]);
	setBitToValue_bitmask(vBytes4[4], 4,vBoolArr[28]);
	setBitToValue_bitmask(vBytes4[4], 5,vBoolArr[29]);
	setBitToValue_bitmask(vBytes4[4], 6,vBoolArr[30]);
	setBitToValue_bitmask(vBytes4[4], 7,vBoolArr[31]);
	setBitToValue_bitmask(vBytes4[4], 8,vBoolArr[32]);
END_FOR
vTest4.ExecTime := LTIME() - vTest4.OldTime;

vTest5.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
    FOR j:=1 TO 4 DO
        setBitToValue_bitmask(vBytes5[j], 1, vBoolArr[1 + ((j-1) * 8)]);
        setBitToValue_bitmask(vBytes5[j], 2, vBoolArr[2 + ((j-1) * 8)]);
        setBitToValue_bitmask(vBytes5[j], 3, vBoolArr[3 + ((j-1) * 8)]);
        setBitToValue_bitmask(vBytes5[j], 4, vBoolArr[4 + ((j-1) * 8)]);
        setBitToValue_bitmask(vBytes5[j], 5, vBoolArr[5 + ((j-1) * 8)]);
        setBitToValue_bitmask(vBytes5[j], 6, vBoolArr[6 + ((j-1) * 8)]);
        setBitToValue_bitmask(vBytes5[j], 7, vBoolArr[7 + ((j-1) * 8)]);
        setBitToValue_bitmask(vBytes5[j], 8, vBoolArr[8 + ((j-1) * 8)]);
    END_FOR
END_FOR
vTest5.ExecTime := LTIME() - vTest5.OldTime;


vTest6.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
    vBytes6[1] := 0;
    vBytes6[2] := 0;
    vBytes6[3] := 0;
    vBytes6[4] := 0;

	vBytes6[1] := vBytes6[1] OR SHL(BOOL_TO_USINT(vBoolArr[1]),0);
	vBytes6[1] := vBytes6[1] OR SHL(BOOL_TO_USINT(vBoolArr[2]),1);
	vBytes6[1] := vBytes6[1] OR SHL(BOOL_TO_USINT(vBoolArr[3]),2);
	vBytes6[1] := vBytes6[1] OR SHL(BOOL_TO_USINT(vBoolArr[4]),3);
	vBytes6[1] := vBytes6[1] OR SHL(BOOL_TO_USINT(vBoolArr[5]),4);
	vBytes6[1] := vBytes6[1] OR SHL(BOOL_TO_USINT(vBoolArr[6]),5);
	vBytes6[1] := vBytes6[1] OR SHL(BOOL_TO_USINT(vBoolArr[7]),6);
	vBytes6[1] := vBytes6[1] OR SHL(BOOL_TO_USINT(vBoolArr[8]),7);
	
	vBytes6[2] := vBytes6[2] OR SHL(BOOL_TO_USINT(vBoolArr[9]) ,0);
	vBytes6[2] := vBytes6[2] OR SHL(BOOL_TO_USINT(vBoolArr[10]),1);
	vBytes6[2] := vBytes6[2] OR SHL(BOOL_TO_USINT(vBoolArr[11]),2);
	vBytes6[2] := vBytes6[2] OR SHL(BOOL_TO_USINT(vBoolArr[12]),3);
	vBytes6[2] := vBytes6[2] OR SHL(BOOL_TO_USINT(vBoolArr[13]),4);
	vBytes6[2] := vBytes6[2] OR SHL(BOOL_TO_USINT(vBoolArr[14]),5);
	vBytes6[2] := vBytes6[2] OR SHL(BOOL_TO_USINT(vBoolArr[15]),6);
	vBytes6[2] := vBytes6[2] OR SHL(BOOL_TO_USINT(vBoolArr[16]),7);
	
	vBytes6[3] := vBytes6[3] OR SHL(BOOL_TO_USINT(vBoolArr[17]),0);
	vBytes6[3] := vBytes6[3] OR SHL(BOOL_TO_USINT(vBoolArr[18]),1);
	vBytes6[3] := vBytes6[3] OR SHL(BOOL_TO_USINT(vBoolArr[19]),2);
	vBytes6[3] := vBytes6[3] OR SHL(BOOL_TO_USINT(vBoolArr[20]),3);
	vBytes6[3] := vBytes6[3] OR SHL(BOOL_TO_USINT(vBoolArr[21]),4);
	vBytes6[3] := vBytes6[3] OR SHL(BOOL_TO_USINT(vBoolArr[22]),5);
	vBytes6[3] := vBytes6[3] OR SHL(BOOL_TO_USINT(vBoolArr[23]),6);
	vBytes6[3] := vBytes6[3] OR SHL(BOOL_TO_USINT(vBoolArr[24]),7);
	
	vBytes6[4] := vBytes6[4] OR SHL(BOOL_TO_USINT(vBoolArr[25]),0);
	vBytes6[4] := vBytes6[4] OR SHL(BOOL_TO_USINT(vBoolArr[26]),1);
	vBytes6[4] := vBytes6[4] OR SHL(BOOL_TO_USINT(vBoolArr[27]),2);
	vBytes6[4] := vBytes6[4] OR SHL(BOOL_TO_USINT(vBoolArr[28]),3);
	vBytes6[4] := vBytes6[4] OR SHL(BOOL_TO_USINT(vBoolArr[29]),4);
	vBytes6[4] := vBytes6[4] OR SHL(BOOL_TO_USINT(vBoolArr[30]),5);
	vBytes6[4] := vBytes6[4] OR SHL(BOOL_TO_USINT(vBoolArr[31]),6);
	vBytes6[4] := vBytes6[4] OR SHL(BOOL_TO_USINT(vBoolArr[32]),7);
END_FOR
vTest6.ExecTime := LTIME() - vTest6.OldTime;

vTest7.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vBytes7 := BOOLARR_TO_BYTES2(vBoolArr);
END_FOR
vTest7.ExecTime := LTIME() - vTest7.OldTime;

//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;
vTest3.Results[vRunsCompleted] := vTest3.ExecTime;
vTest4.Results[vRunsCompleted] := vTest4.ExecTime;
vTest5.Results[vRunsCompleted] := vTest5.ExecTime;
vTest6.Results[vRunsCompleted] := vTest6.ExecTime;
vTest7.Results[vRunsCompleted] := vTest7.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>52f1730e-51c2-40cb-b751-f2b5ace875fe</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc 			:= 'Time to pack bool array to 4 bytes, function, milion times';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc 			:= 'Time to pack bool array to 4 bytes, flat, milion times';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
vTest3.Desc 			:= 'Time TO pack bool array to 4 bytes, bitmask, milion times';
vTest3.AverageExecTime 	:= calcAvg(vTest3.Results);
vTest4.Desc 			:= 'Time to pack bool array to 4 bytes, bitmask function, milion times';
vTest4.AverageExecTime 	:= calcAvg(vTest4.Results);
vTest5.Desc 			:= 'Time TO pack bool array to 4 bytes, bitmask function in a loop, milion times';
vTest5.AverageExecTime 	:= calcAvg(vTest5.Results);
vTest6.Desc 			:= 'Time to pack bool array to 4 bytes, clear + bitmask, milion times';
vTest6.AverageExecTime 	:= calcAvg(vTest6.Results);
vTest7.Desc 			:= 'Time TO pack bool array to 4 bytes, clear + bitmask, function, milion times';
vTest7.AverageExecTime 	:= calcAvg(vTest7.Results);
	
vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2eab04f9-8124-4db4-ae4b-22d6bb09d6ea</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BOOLARR_TO_BYTES" pouType="function">
        <interface>
          <returnType>
            <array>
              <dimension lower="1" upper="4" />
              <baseType>
                <USINT />
              </baseType>
            </array>
          </returnType>
          <inOutVars>
            <variable name="Data">
              <type>
                <array>
                  <dimension lower="1" upper="32" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">BOOLARR_TO_BYTES[1].0 := Data[1];
BOOLARR_TO_BYTES[1].1 := Data[2];
BOOLARR_TO_BYTES[1].2 := Data[3];
BOOLARR_TO_BYTES[1].3 := Data[4];
BOOLARR_TO_BYTES[1].4 := Data[5];
BOOLARR_TO_BYTES[1].5 := Data[6];
BOOLARR_TO_BYTES[1].6 := Data[7];
BOOLARR_TO_BYTES[1].7 := Data[8];

BOOLARR_TO_BYTES[2].0 := Data[9];
BOOLARR_TO_BYTES[2].1 := Data[10];
BOOLARR_TO_BYTES[2].2 := Data[11];
BOOLARR_TO_BYTES[2].3 := Data[12];
BOOLARR_TO_BYTES[2].4 := Data[13];
BOOLARR_TO_BYTES[2].5 := Data[14];
BOOLARR_TO_BYTES[2].6 := Data[15];
BOOLARR_TO_BYTES[2].7 := Data[16];

BOOLARR_TO_BYTES[3].0 := Data[17];
BOOLARR_TO_BYTES[3].1 := Data[18];
BOOLARR_TO_BYTES[3].2 := Data[19];
BOOLARR_TO_BYTES[3].3 := Data[20];
BOOLARR_TO_BYTES[3].4 := Data[21];
BOOLARR_TO_BYTES[3].5 := Data[22];
BOOLARR_TO_BYTES[3].6 := Data[23];
BOOLARR_TO_BYTES[3].7 := Data[24];

BOOLARR_TO_BYTES[4].0 := Data[25];
BOOLARR_TO_BYTES[4].1 := Data[26];
BOOLARR_TO_BYTES[4].2 := Data[27];
BOOLARR_TO_BYTES[4].3 := Data[28];
BOOLARR_TO_BYTES[4].4 := Data[29];
BOOLARR_TO_BYTES[4].5 := Data[30];
BOOLARR_TO_BYTES[4].6 := Data[31];
BOOLARR_TO_BYTES[4].7 := Data[32];</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3e0a25b4-756e-4815-81c0-36745d28e14a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BOOLARR_TO_BYTES2" pouType="function">
        <interface>
          <returnType>
            <array>
              <dimension lower="1" upper="4" />
              <baseType>
                <USINT />
              </baseType>
            </array>
          </returnType>
          <inOutVars>
            <variable name="Data">
              <type>
                <array>
                  <dimension lower="1" upper="32" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">BOOLARR_TO_BYTES2[1] := BOOLARR_TO_BYTES2[1] OR SHL(BOOL_TO_USINT(Data[1]),0);
BOOLARR_TO_BYTES2[1] := BOOLARR_TO_BYTES2[1] OR SHL(BOOL_TO_USINT(Data[2]),1);
BOOLARR_TO_BYTES2[1] := BOOLARR_TO_BYTES2[1] OR SHL(BOOL_TO_USINT(Data[3]),2);
BOOLARR_TO_BYTES2[1] := BOOLARR_TO_BYTES2[1] OR SHL(BOOL_TO_USINT(Data[4]),3);
BOOLARR_TO_BYTES2[1] := BOOLARR_TO_BYTES2[1] OR SHL(BOOL_TO_USINT(Data[5]),4);
BOOLARR_TO_BYTES2[1] := BOOLARR_TO_BYTES2[1] OR SHL(BOOL_TO_USINT(Data[6]),5);
BOOLARR_TO_BYTES2[1] := BOOLARR_TO_BYTES2[1] OR SHL(BOOL_TO_USINT(Data[7]),6);
BOOLARR_TO_BYTES2[1] := BOOLARR_TO_BYTES2[1] OR SHL(BOOL_TO_USINT(Data[8]),7);
	
BOOLARR_TO_BYTES2[2] := BOOLARR_TO_BYTES2[2] OR SHL(BOOL_TO_USINT(Data[9]) ,0);
BOOLARR_TO_BYTES2[2] := BOOLARR_TO_BYTES2[2] OR SHL(BOOL_TO_USINT(Data[10]),1);
BOOLARR_TO_BYTES2[2] := BOOLARR_TO_BYTES2[2] OR SHL(BOOL_TO_USINT(Data[11]),2);
BOOLARR_TO_BYTES2[2] := BOOLARR_TO_BYTES2[2] OR SHL(BOOL_TO_USINT(Data[12]),3);
BOOLARR_TO_BYTES2[2] := BOOLARR_TO_BYTES2[2] OR SHL(BOOL_TO_USINT(Data[13]),4);
BOOLARR_TO_BYTES2[2] := BOOLARR_TO_BYTES2[2] OR SHL(BOOL_TO_USINT(Data[14]),5);
BOOLARR_TO_BYTES2[2] := BOOLARR_TO_BYTES2[2] OR SHL(BOOL_TO_USINT(Data[15]),6);
BOOLARR_TO_BYTES2[2] := BOOLARR_TO_BYTES2[2] OR SHL(BOOL_TO_USINT(Data[16]),7);
	
BOOLARR_TO_BYTES2[3] := BOOLARR_TO_BYTES2[3] OR SHL(BOOL_TO_USINT(Data[17]),0);
BOOLARR_TO_BYTES2[3] := BOOLARR_TO_BYTES2[3] OR SHL(BOOL_TO_USINT(Data[18]),1);
BOOLARR_TO_BYTES2[3] := BOOLARR_TO_BYTES2[3] OR SHL(BOOL_TO_USINT(Data[19]),2);
BOOLARR_TO_BYTES2[3] := BOOLARR_TO_BYTES2[3] OR SHL(BOOL_TO_USINT(Data[20]),3);
BOOLARR_TO_BYTES2[3] := BOOLARR_TO_BYTES2[3] OR SHL(BOOL_TO_USINT(Data[21]),4);
BOOLARR_TO_BYTES2[3] := BOOLARR_TO_BYTES2[3] OR SHL(BOOL_TO_USINT(Data[22]),5);
BOOLARR_TO_BYTES2[3] := BOOLARR_TO_BYTES2[3] OR SHL(BOOL_TO_USINT(Data[23]),6);
BOOLARR_TO_BYTES2[3] := BOOLARR_TO_BYTES2[3] OR SHL(BOOL_TO_USINT(Data[24]),7);
	
BOOLARR_TO_BYTES2[4] := BOOLARR_TO_BYTES2[4] OR SHL(BOOL_TO_USINT(Data[25]),0);
BOOLARR_TO_BYTES2[4] := BOOLARR_TO_BYTES2[4] OR SHL(BOOL_TO_USINT(Data[26]),1);
BOOLARR_TO_BYTES2[4] := BOOLARR_TO_BYTES2[4] OR SHL(BOOL_TO_USINT(Data[27]),2);
BOOLARR_TO_BYTES2[4] := BOOLARR_TO_BYTES2[4] OR SHL(BOOL_TO_USINT(Data[28]),3);
BOOLARR_TO_BYTES2[4] := BOOLARR_TO_BYTES2[4] OR SHL(BOOL_TO_USINT(Data[29]),4);
BOOLARR_TO_BYTES2[4] := BOOLARR_TO_BYTES2[4] OR SHL(BOOL_TO_USINT(Data[30]),5);
BOOLARR_TO_BYTES2[4] := BOOLARR_TO_BYTES2[4] OR SHL(BOOL_TO_USINT(Data[31]),6);
BOOLARR_TO_BYTES2[4] := BOOLARR_TO_BYTES2[4] OR SHL(BOOL_TO_USINT(Data[32]),7);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>51f99054-eb38-4f39-9943-263b385d74f8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x13_ByteArrayToBool32" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cNrRuns">
              <type>
                <subrangeSigned>
                  <range lower="0" upper="9" />
                  <baseType>
                    <USINT />
                  </baseType>
                </subrangeSigned>
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
            </variable>
            <variable name="cRepeatCalcTimes">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1000000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">1 Million times</xhtml>
              </documentation>
            </variable>
          </localVars>
          <inputVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vRunsCompleted">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vStartTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTotalTime">
              <type>
                <derived name="LTIME" />
              </type>
            </variable>
            <variable name="vTest1">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest2">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest3">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="vTest4">
              <type>
                <derived name="dtSpeedTest" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="j">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vBoolArr1">
              <type>
                <array>
                  <dimension lower="1" upper="32" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Test vars</xhtml>
              </documentation>
            </variable>
            <variable name="vBoolArr2">
              <type>
                <array>
                  <dimension lower="1" upper="32" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vBoolArr3">
              <type>
                <array>
                  <dimension lower="1" upper="32" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vBoolArr4">
              <type>
                <array>
                  <dimension lower="1" upper="32" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vBytes">
              <type>
                <array>
                  <dimension lower="1" upper="4" />
                  <baseType>
                    <USINT />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="16#FF" />
                  </value>
                  <value>
                    <simpleValue value="16#85" />
                  </value>
                  <value>
                    <simpleValue value="16#0" />
                  </value>
                  <value>
                    <simpleValue value="16#AB" />
                  </value>
                </arrayValue>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Measure">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//------------CALCULATION A -------------------
vTest1.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vBoolArr1 := UnpackBytesToBool32(vBytes);
END_FOR
vTest1.ExecTime := LTIME() - vTest1.OldTime;

//------------CALCULATION B -------------------
vTest2.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vBoolArr2[1] := vBytes[1].0;
	vBoolArr2[2] := vBytes[1].1;
	vBoolArr2[3] := vBytes[1].2;
	vBoolArr2[4] := vBytes[1].3;
	vBoolArr2[5] := vBytes[1].4;
	vBoolArr2[6] := vBytes[1].5;
	vBoolArr2[7] := vBytes[1].6;
	vBoolArr2[8] := vBytes[1].7;
	
	vBoolArr2[9] :=  vBytes[2].0;
	vBoolArr2[10] := vBytes[2].1;
	vBoolArr2[11] := vBytes[2].2;
	vBoolArr2[12] := vBytes[2].3;
	vBoolArr2[13] := vBytes[2].4;
	vBoolArr2[14] := vBytes[2].5;
	vBoolArr2[15] := vBytes[2].6;
	vBoolArr2[16] := vBytes[2].7;
	
	vBoolArr2[17] := vBytes[3].0;
	vBoolArr2[18] := vBytes[3].1;
	vBoolArr2[19] := vBytes[3].2;
	vBoolArr2[20] := vBytes[3].3;
	vBoolArr2[21] := vBytes[3].4;
	vBoolArr2[22] := vBytes[3].5;
	vBoolArr2[23] := vBytes[3].6;
	vBoolArr2[24] := vBytes[3].7;
	
	vBoolArr2[25] := vBytes[4].0;
	vBoolArr2[26] := vBytes[4].1;
	vBoolArr2[27] := vBytes[4].2;
	vBoolArr2[28] := vBytes[4].3;
	vBoolArr2[29] := vBytes[4].4;
	vBoolArr2[30] := vBytes[4].5;
	vBoolArr2[31] := vBytes[4].6;
	vBoolArr2[32] := vBytes[4].7;

END_FOR
vTest2.ExecTime := LTIME() - vTest2.OldTime;

//------------CALCULATION C -------------------
vTest3.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vBoolArr3 := UnpackBytesToBool32_2(vBytes);
END_FOR
vTest3.ExecTime := LTIME() - vTest3.OldTime;

vTest4.OldTime := LTIME();
FOR i:= 0 TO cRepeatCalcTimes DO
	vBoolArr4[1] := (vBytes[1] AND 1) &lt;&gt; 0;
	vBoolArr4[2] := (vBytes[1] AND 2) &lt;&gt; 0;
	vBoolArr4[3] := (vBytes[1] AND 4) &lt;&gt; 0;
	vBoolArr4[4] := (vBytes[1] AND 8) &lt;&gt; 0;
	vBoolArr4[5] := (vBytes[1] AND 16) &lt;&gt; 0;
	vBoolArr4[6] := (vBytes[1] AND 32) &lt;&gt; 0;
	vBoolArr4[7] := (vBytes[1] AND 64) &lt;&gt; 0;
	vBoolArr4[8] := (vBytes[1] AND 128) &lt;&gt; 0;
	
	vBoolArr4[9] := (vBytes[2] AND  1) &lt;&gt; 0;
	vBoolArr4[10] := (vBytes[2] AND 2) &lt;&gt; 0;
	vBoolArr4[11] := (vBytes[2] AND 4) &lt;&gt; 0;
	vBoolArr4[12] := (vBytes[2] AND 8) &lt;&gt; 0;
	vBoolArr4[13] := (vBytes[2] AND 16) &lt;&gt; 0;
	vBoolArr4[14] := (vBytes[2] AND 32) &lt;&gt; 0;
	vBoolArr4[15] := (vBytes[2] AND 64) &lt;&gt; 0;
	vBoolArr4[16] := (vBytes[2] AND 128) &lt;&gt; 0;
	
	vBoolArr4[17] := (vBytes[3] AND 1) &lt;&gt; 0;
	vBoolArr4[18] := (vBytes[3] AND 2) &lt;&gt; 0;
	vBoolArr4[19] := (vBytes[3] AND 4) &lt;&gt; 0;
	vBoolArr4[20] := (vBytes[3] AND 8) &lt;&gt; 0;
	vBoolArr4[21] := (vBytes[3] AND 16) &lt;&gt; 0;
	vBoolArr4[22] := (vBytes[3] AND 32) &lt;&gt; 0;
	vBoolArr4[23] := (vBytes[3] AND 64) &lt;&gt; 0;
	vBoolArr4[24] := (vBytes[3] AND 128) &lt;&gt; 0;
	
	vBoolArr4[25] := (vBytes[4] AND 1) &lt;&gt; 0;
	vBoolArr4[26] := (vBytes[4] AND 2) &lt;&gt; 0;
	vBoolArr4[27] := (vBytes[4] AND 4) &lt;&gt; 0;
	vBoolArr4[28] := (vBytes[4] AND 8) &lt;&gt; 0;
	vBoolArr4[29] := (vBytes[4] AND 16) &lt;&gt; 0;
	vBoolArr4[30] := (vBytes[4] AND 32) &lt;&gt; 0;
	vBoolArr4[31] := (vBytes[4] AND 64) &lt;&gt; 0;
	vBoolArr4[32] := (vBytes[4] AND 128) &lt;&gt; 0;

END_FOR
vTest4.ExecTime := LTIME() - vTest4.OldTime;

//------------CATCH RESULTS---------------------
vTest1.Results[vRunsCompleted] := vTest1.ExecTime;
vTest2.Results[vRunsCompleted] := vTest2.ExecTime;
vTest3.Results[vRunsCompleted] := vTest3.ExecTime;
vTest4.Results[vRunsCompleted] := vTest4.ExecTime;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>3bb16b62-a7d2-4e80-a5f5-d17bef7f2b0e</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Runs once on event's rising edge*)
vDone 		:= FALSE;
vStartTime 	:= LTIME();

FOR vRunsCompleted:=0 TO cNrRuns DO
	Measure();
END_FOR

vTotalTime := LTIME() - vStartTime;

vTest1.Desc 			:= 'Time to upack 4 bytes to bool array, function, milion times';
vTest1.AverageExecTime 	:= calcAvg(vTest1.Results);
vTest2.Desc 			:= 'Time to upack 4 bytes to bool array, flat, milion times, milion times';
vTest2.AverageExecTime 	:= calcAvg(vTest2.Results);
vTest3.Desc 			:= 'Time to upack 4 bytes to bool array, bitmask function, milion times, milion times';
vTest3.AverageExecTime 	:= calcAvg(vTest3.Results);
vTest4.Desc 			:= 'Time to upack 4 bytes to bool array, bitmask, milion times, milion times';
vTest4.AverageExecTime 	:= calcAvg(vTest4.Results);

vDone := TRUE;
vStart:= FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>74f165ea-ef07-4399-81f4-5a22d69d1c4c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="UnpackBytesToBool32" pouType="function">
        <interface>
          <returnType>
            <array>
              <dimension lower="1" upper="32" />
              <baseType>
                <BOOL />
              </baseType>
            </array>
          </returnType>
          <inOutVars>
            <variable name="Bytes">
              <type>
                <array>
                  <dimension lower="1" upper="4" />
                  <baseType>
                    <USINT />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">UnpackBytesToBool32[1] := Bytes[1].0;
UnpackBytesToBool32[2] := Bytes[1].1;
UnpackBytesToBool32[3] := Bytes[1].2;
UnpackBytesToBool32[4] := Bytes[1].3;
UnpackBytesToBool32[5] := Bytes[1].4;
UnpackBytesToBool32[6] := Bytes[1].5;
UnpackBytesToBool32[7] := Bytes[1].6;
UnpackBytesToBool32[8] := Bytes[1].7;

UnpackBytesToBool32[9] := Bytes[2].0;
UnpackBytesToBool32[10] := Bytes[2].1;
UnpackBytesToBool32[11] := Bytes[2].2;
UnpackBytesToBool32[12] := Bytes[2].3;
UnpackBytesToBool32[13] := Bytes[2].4;
UnpackBytesToBool32[14] := Bytes[2].5;
UnpackBytesToBool32[15] := Bytes[2].6;
UnpackBytesToBool32[16] := Bytes[2].7;

UnpackBytesToBool32[17] := Bytes[3].0;
UnpackBytesToBool32[18] := Bytes[3].1;
UnpackBytesToBool32[19] := Bytes[3].2;
UnpackBytesToBool32[20] := Bytes[3].3;
UnpackBytesToBool32[21] := Bytes[3].4;
UnpackBytesToBool32[22] := Bytes[3].5;
UnpackBytesToBool32[23] := Bytes[3].6;
UnpackBytesToBool32[24] := Bytes[3].7;

UnpackBytesToBool32[25] := Bytes[4].0;
UnpackBytesToBool32[26] := Bytes[4].1;
UnpackBytesToBool32[27] := Bytes[4].2;
UnpackBytesToBool32[28] := Bytes[4].3;
UnpackBytesToBool32[29] := Bytes[4].4;
UnpackBytesToBool32[30] := Bytes[4].5;
UnpackBytesToBool32[31] := Bytes[4].6;
UnpackBytesToBool32[32] := Bytes[4].7;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6d3db079-17dd-4cb1-a422-91fc1faa4560</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="UnpackBytesToBool32_2" pouType="function">
        <interface>
          <returnType>
            <array>
              <dimension lower="1" upper="32" />
              <baseType>
                <BOOL />
              </baseType>
            </array>
          </returnType>
          <inOutVars>
            <variable name="Bytes">
              <type>
                <array>
                  <dimension lower="1" upper="4" />
                  <baseType>
                    <USINT />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">UnpackBytesToBool32_2[1] := (Bytes[1] AND 1) &lt;&gt; 0;
UnpackBytesToBool32_2[2] := (Bytes[1] AND 2) &lt;&gt; 0;
UnpackBytesToBool32_2[3] := (Bytes[1] AND 4) &lt;&gt; 0;
UnpackBytesToBool32_2[4] := (Bytes[1] AND 8) &lt;&gt; 0;
UnpackBytesToBool32_2[5] := (Bytes[1] AND 16) &lt;&gt; 0;
UnpackBytesToBool32_2[6] := (Bytes[1] AND 32) &lt;&gt; 0;
UnpackBytesToBool32_2[7] := (Bytes[1] AND 64) &lt;&gt; 0;
UnpackBytesToBool32_2[8] := (Bytes[1] AND 128) &lt;&gt; 0;

UnpackBytesToBool32_2[9] :=  (Bytes[2] AND 1) &lt;&gt; 0;;
UnpackBytesToBool32_2[10] := (Bytes[2] AND 2) &lt;&gt; 0;
UnpackBytesToBool32_2[11] := (Bytes[2] AND 4) &lt;&gt; 0;
UnpackBytesToBool32_2[12] := (Bytes[2] AND 8) &lt;&gt; 0;
UnpackBytesToBool32_2[13] := (Bytes[2] AND 16) &lt;&gt; 0;
UnpackBytesToBool32_2[14] := (Bytes[2] AND 32) &lt;&gt; 0;
UnpackBytesToBool32_2[15] := (Bytes[2] AND 64) &lt;&gt; 0;
UnpackBytesToBool32_2[16] := (Bytes[2] AND 128) &lt;&gt; 0;

UnpackBytesToBool32_2[17] := (Bytes[3] AND 1) &lt;&gt; 0;
UnpackBytesToBool32_2[18] := (Bytes[3] AND 2) &lt;&gt; 0;
UnpackBytesToBool32_2[19] := (Bytes[3] AND 4) &lt;&gt; 0;
UnpackBytesToBool32_2[20] := (Bytes[3] AND 8) &lt;&gt; 0;
UnpackBytesToBool32_2[21] := (Bytes[3] AND 16) &lt;&gt; 0;
UnpackBytesToBool32_2[22] := (Bytes[3] AND 32) &lt;&gt; 0;
UnpackBytesToBool32_2[23] := (Bytes[3] AND 64) &lt;&gt; 0;
UnpackBytesToBool32_2[24] := (Bytes[3] AND 128) &lt;&gt; 0;

UnpackBytesToBool32_2[25] := (Bytes[4] AND 1) &lt;&gt; 0;
UnpackBytesToBool32_2[26] := (Bytes[4] AND 2) &lt;&gt; 0;
UnpackBytesToBool32_2[27] := (Bytes[4] AND 4) &lt;&gt; 0;
UnpackBytesToBool32_2[28] := (Bytes[4] AND 8) &lt;&gt; 0;
UnpackBytesToBool32_2[29] := (Bytes[4] AND 16) &lt;&gt; 0;
UnpackBytesToBool32_2[30] := (Bytes[4] AND 32) &lt;&gt; 0;
UnpackBytesToBool32_2[31] := (Bytes[4] AND 64) &lt;&gt; 0;
UnpackBytesToBool32_2[32] := (Bytes[4] AND 128) &lt;&gt; 0;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>00e46ab0-b561-402e-a609-aa635fec6ce7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="x00_CalcMIPS_FLOPS" pouType="program">
        <interface>
          <localVars>
            <variable name="vStart">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vDone">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vMIPS">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vFLOPS">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vkFLOPS">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vMFLOPS">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vGFLOPS">
              <type>
                <REAL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vDone := FALSE;
(*Calculate MIPS and FLOPS of this machine
	PS: These calcs are not 100% accurate but more to compare machine to machine*)
(*
	System spec:
	- OS Name	Microsoft Windows 10 Home	
	- Version	10.0.19044 Build 19044	
	- OS Manufacturer	Microsoft Corporation	
	- System Manufacturer	SAMSUNG ELECTRONICS CO., LTD.	
	- System Model	3570R/370R/470R/450R/510R/4450RV	
	- System Type	x64-based PC	
	- Processor	Intel(R) Core(TM) i5-3210M CPU @ 2.50GHz, 2501 Mhz, 2 Core(s), 4 Logical Processor(s)	
	- Installed Physical Memory (RAM)	8,00 GB	
	- Total Physical Memory	7,89 GB	
	- Available Physical Memory	3,80 GB	
	- Total Virtual Memory	9,75 GB	
	- Available Virtual Memory	5,66 GB	
	
	MIPS 	-&gt; 407
	FLOPS 	-&gt; 3.32e+08
	kFLOPS 	-&gt; 3.32e+05
	MFLOPS 	-&gt; 332
	GFLOPS 	-&gt; 0.332
*)
vMIPS 	:= calcMIPS();
vFLOPS	:= calcFLOPS();
vkFLOPS := vFLOPS / 1000.0;
vMFLOPS := vFLOPS / 1000000.0;
vGFLOPS := vFLOPS / (1000.0 * 1000000.0);

vDone := TRUE;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c49218d9-bfaa-4efe-9d56-b5df197b1a3b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="calcAvgFixed" pouType="function">
        <interface>
          <returnType>
            <derived name="LTIME" />
          </returnType>
          <inOutVars>
            <variable name="Results">
              <type>
                <array>
                  <dimension lower="0" upper="9" />
                  <baseType>
                    <derived name="LTIME" />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="i">
              <type>
                <USINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">FOR i:=0 TO 9 DO
	IF Results[i] = LTIME#0S THEN
		EXIT;
	END_IF
	calcAvgFixed := calcAvgFixed + Results[i];
END_FOR
calcAvgFixed := calcAvgFixed / MAX(1,i);
RETURN;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a46ac05d-7c39-4a72-b333-457576105ddf</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="addTwoIntsCFC" pouType="function">
        <interface>
          <returnType>
            <INT />
          </returnType>
          <inputVars>
            <variable name="int1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="int2">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="4">
                  <position x="2" y="3" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>int1</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="int1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="2" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>int2</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="int2" />
                  </connectionPointIn>
                </connector>
                <block localId="2" executionOrderId="2" typeName="ADD">
                  <position x="7" y="2" />
                  <inputVariables>
                    <variable formalParameter="In1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="In2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Out1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">operator</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="0" executionOrderId="1">
                  <position x="11" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="1" />
                  </connectionPointIn>
                  <expression>addTwoIntsCFC</expression>
                </outVariable>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>81fd9d15-6397-42fb-9239-c48bec1ad48d</ObjectId>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations>
      <configuration name="CODESYS_Control_Win_V3_x64">
        <resource name="Application">
          <task name="SpdRnnr" interval="PT0.2S" priority="16">
            <pouInstance name="speedRunner" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="200" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>ee0318c6-770b-4de6-8bcd-235016305f87</ObjectId>
              </data>
            </addData>
          </task>
          <task name="VISU_TASK" interval="PT0.2S" priority="31">
            <pouInstance name="VisuElems.Visu_Prg" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="200" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>80ce9d12-d3fa-4a2c-9e8f-7949dca4019a</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x01" single="x01_ImpactOfDynamicArrays.vStart" priority="1">
            <pouInstance name="x01_ImpactOfDynamicArrays" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x01_ImpactOfDynamicArrays.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>997d4ea4-d037-4761-8e72-a1459a6cc9ee</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x02" single="x02_ExecSpeedOfLanguageTypes.vStart" priority="1">
            <pouInstance name="x02_ExecSpeedOfLanguageTypes" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x02_ExecSpeedOfLanguageTypes.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>98b521f2-6844-4201-9f35-19b3a80f84fd</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x04" single="x04_FunctionOverhead.vStart" priority="1">
            <pouInstance name="x04_FunctionOverhead" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x04_FunctionOverhead.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>1057b811-4448-402c-aaf8-7ab4e747d974</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x05" single="x05_MemSetVsDataZeero.vStart" priority="1">
            <pouInstance name="x05_MemSetVsDataZeero" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x05_MemSetVsDataZeero.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>855f68d4-5402-4cf3-978e-5d9904afbb66</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x06" single="x06_ShlVsMemCpy.vStart" priority="1">
            <pouInstance name="x06_ShlVsMemCpy" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x06_ShlVsMemCpy.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>ddc7248c-dd68-4c25-bf70-0678d6067836</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x07" single="x07_StringOperations.vStart" priority="1">
            <pouInstance name="x07_StringOperations" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x07_StringOperations.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>59e326d3-8acb-481f-a4ff-4634aa63bbfc</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x08" single="x08_CheckingBools.vStart" priority="1">
            <pouInstance name="x08_CheckingBools" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x08_CheckingBools.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>30f5c258-34d3-4159-90b1-ee1a3a1ba5e1</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x09" single="x09_CaseVsIfElsif.vStart" priority="1">
            <pouInstance name="x09_CaseVsIfElsif" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x09_CaseVsIfElsif.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>f2e27f03-48a8-4461-b629-8b56dbbe44ae</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x10_1" single="x10_1_BitAccess.vStart" priority="1">
            <pouInstance name="x10_1_BitAccess" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x10_1_BitAccess.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>02c028c3-3a12-4fb6-8a62-c0c556294c87</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x11" single="x11_CalcInForLoppDecl.vStart" priority="1">
            <pouInstance name="x11_CalcInForLoppDecl" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x11_CalcInForLoppDecl.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>de137938-48f5-4ea4-a519-5afabd7a6531</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x03" single="x03_FloatingPointOperations.vStart" priority="1">
            <pouInstance name="x03_FloatingPointOperations" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x03_FloatingPointOperations.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>5ff92bf5-274a-410c-a7a9-f72b118a853d</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x12" single="x12_BoolArrayToByteArray.vStart" priority="1">
            <pouInstance name="x12_BoolArrayToByteArray" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x12_BoolArrayToByteArray.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>e50d90a9-58ed-4afe-9557-a7932f6fb92e</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x13" single="x13_ByteArrayToBool32.vStart" priority="1">
            <pouInstance name="x13_ByteArrayToBool32" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x13_ByteArrayToBool32.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>a2a9fad0-3b27-4ae8-a1fe-650a949235e0</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x10_2" single="x10_2_BitSet.vStart" priority="1">
            <pouInstance name="x10_2_BitSet" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x10_2_BitSet.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>f702bc47-368b-4739-90f8-919d419d832a</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x10_3" single="x10_3_BitMath.vStart" priority="1">
            <pouInstance name="x10_3_BitMath" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x10_3_BitMath.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>cc3dd8e2-1d7a-4403-9411-f0fce93566f1</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x00" single="x00_CalcMIPS_FLOPS.vStart" priority="1">
            <pouInstance name="x00_CalcMIPS_FLOPS" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="t#20ms" IntervalUnit="ms" Event="x00_CalcMIPS_FLOPS.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>00096b11-5ad3-43b3-b997-0b85a0532632</ObjectId>
              </data>
            </addData>
          </task>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
              <Libraries>
                <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.17.0 (System)" />
                <Library Name="#3SLicense" Namespace="_3S_LICENSE" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)" ResolverGuid="97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b" />
                <Library Name="#CAA Device Diagnosis" Namespace="DED" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CAA Device Diagnosis, 3.5.18.0 (CAA Technical Workgroup)" />
                <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, * (3S - Smart Software Solutions GmbH)" />
                <Library Name="MemoryUtils, 3.5.18.0 (3S - Smart Software Solutions GmbH)" Namespace="MEMUtils" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
                <Library Name="#System_VisuElems" Namespace="VisuElems" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElems, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemMeter" Namespace="VisuElemMeter" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemMeter, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsSpecialControls" Namespace="VisuElemsSpecialControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsSpecialControls, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsWinControls" Namespace="VisuElemsWinControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsWinControls, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemTextEditor" Namespace="VisuElemTextEditor" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTextEditor, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemTrace" Namespace="VisuElemTrace" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTrace, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuNativeControl" Namespace="VisuNativeControl" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuNativeControl, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsAlarm" Namespace="VisuElemsAlarm" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsAlarm, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemCamDisplayer" Namespace="VisuElemCamDisplayer" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemCamDisplayer, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
                  <Parameters>
                    <Parameter Name="GC_POINTS_PER_CAM" Value="100" />
                  </Parameters>
                </Library>
                <Library Name="#System_VisuElem3DPath" Namespace="VisuElem3DPath" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElem3DPath, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
                  <Parameters>
                    <Parameter Name="GC_POINTS_PER_POLYGON" Value="100" />
                  </Parameters>
                </Library>
                <Library Name="#System_VisuElemsDateTime" Namespace="VisuElemsDateTime" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsDateTime, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemXYChart" Namespace="VisuElemXYChart" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemXYChart, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#system_visuinputs" Namespace="visuinputs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="visuinputs, 4.1.0.0 (system)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#VisuDialogs" Namespace="VisuDialogs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="VisuDialogs, * (System)" />
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>2c026f2c-4f21-4d50-afba-ff7714b58459</ObjectId>
                  </data>
                </addData>
              </Libraries>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
              <BuildProperties>
                <CompilerDefines>GENERATE_OVERLAY_VISU</CompilerDefines>
              </BuildProperties>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>9b73d673-0d3d-4761-a178-a18fbf2ba16b</ObjectId>
            </data>
          </addData>
        </resource>
        <addData>
          <data name="Device" handleUnknown="discard">
            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
              <DeviceType>
                <DeviceIdentification>
                  <Type>4097</Type>
                  <Id>0000 000a</Id>
                  <Version>3.5.18.20</Version>
                </DeviceIdentification>
                <Connector moduleType="256" interface="Common.PCI" connectorId="0">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="769" interface="SafetyInterface" connectorId="1">
                  <HostParameterSet />
                </Connector>
                <DeviceParameterSet />
              </DeviceType>
            </Device>
          </data>
          <data name="configurations" handleUnknown="discard">
            <configurations />
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>26264239-25d9-42f6-bfbc-405ae47d66cf</ObjectId>
          </data>
        </addData>
      </configuration>
      <configuration name="CODESYS_Control_RTE_V3_x64">
        <resource name="Application">
          <task name="x01" single="x01_ImpactOfDynamicArrays.vStart" priority="1">
            <pouInstance name="x01_ImpactOfDynamicArrays" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x01_ImpactOfDynamicArrays.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>624514e7-846d-4395-b0c9-cc8d643e4e7e</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x04" single="x04_FunctionOverhead.vStart" priority="1">
            <pouInstance name="x04_FunctionOverhead" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x04_FunctionOverhead.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>37f779ef-f9f4-4f8e-aa8f-2087bd9f1c83</ObjectId>
              </data>
            </addData>
          </task>
          <task name="SpdRnnr" interval="PT0.2S" priority="16">
            <pouInstance name="speedRunner" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="200" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>bffd86d5-f7f6-45b6-b1e2-b8a4bd04fcb5</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x06" single="x06_ShlVsMemCpy.vStart" priority="1">
            <pouInstance name="x06_ShlVsMemCpy" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x06_ShlVsMemCpy.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>9048ce15-c376-4ddd-af95-219f10c1fa36</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x02" single="x02_ExecSpeedOfLanguageTypes.vStart" priority="1">
            <pouInstance name="x02_ExecSpeedOfLanguageTypes" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x02_ExecSpeedOfLanguageTypes.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>5c43b717-d45d-46d0-9d7c-fe9b7781c205</ObjectId>
              </data>
            </addData>
          </task>
          <task name="VISU_TASK" interval="PT0.2S" priority="31">
            <pouInstance name="VisuElems.Visu_Prg" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="200" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>0a985513-bde5-42f9-949f-b2695f84404b</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x07" single="x07_StringOperations.vStart" priority="1">
            <pouInstance name="x07_StringOperations" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x07_StringOperations.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>d0ce08e0-f215-4412-a152-95c78bf403c8</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x08" single="x08_CheckingBools.vStart" priority="1">
            <pouInstance name="x08_CheckingBools" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x08_CheckingBools.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>f39d1bd0-ed6d-4ead-94cd-837863ae9f63</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x10_1" single="x10_1_BitAccess.vStart" priority="1">
            <pouInstance name="x10_1_BitAccess" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x10_1_BitAccess.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>d43a3d5c-e4fc-4ceb-a2de-a1d3a1c18543</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x09" single="x09_CaseVsIfElsif.vStart" priority="1">
            <pouInstance name="x09_CaseVsIfElsif" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x09_CaseVsIfElsif.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>01f0d965-9640-4229-91ed-e5b76d977101</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x05" single="x05_MemSetVsDataZeero.vStart" priority="1">
            <pouInstance name="x05_MemSetVsDataZeero" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x05_MemSetVsDataZeero.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>e9539de3-8dad-4da7-bc06-773e6a8a249e</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x12" single="x12_BoolArrayToByteArray.vStart" priority="1">
            <pouInstance name="x12_BoolArrayToByteArray" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x12_BoolArrayToByteArray.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>1cf14ab6-6b0c-4260-af74-a1f6d07e15ba</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x13" single="x13_ByteArrayToBool32.vStart" priority="1">
            <pouInstance name="x13_ByteArrayToBool32" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x13_ByteArrayToBool32.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>d97f8462-dc15-49d5-a1ad-a62c5009be6f</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x11" single="x11_CalcInForLoppDecl.vStart" priority="1">
            <pouInstance name="x11_CalcInForLoppDecl" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x11_CalcInForLoppDecl.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>e24bea1d-d16c-461f-862f-2ddff6852951</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x03" single="x03_FloatingPointOperations.vStart" priority="1">
            <pouInstance name="x03_FloatingPointOperations" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x03_FloatingPointOperations.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>b617d5fc-09c8-4ada-b38f-a4d466956dd0</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x10_2" single="x10_2_BitSet.vStart" priority="1">
            <pouInstance name="x10_2_BitSet" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x10_2_BitSet.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>3d2cca12-07fa-4f41-a972-3f46c5bafaf4</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x10_3" single="x10_3_BitMath.vStart" priority="1">
            <pouInstance name="x10_3_BitMath" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="200" IntervalUnit="ms" Event="x10_3_BitMath.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>0458cfee-014c-44a1-8231-ad30ebde6b4d</ObjectId>
              </data>
            </addData>
          </task>
          <task name="x00" single="x00_CalcMIPS_FLOPS.vStart" priority="1">
            <pouInstance name="x00_CalcMIPS_FLOPS" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Event" Interval="t#20ms" IntervalUnit="ms" Event="x00_CalcMIPS_FLOPS.vStart" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>590ef554-99b8-488e-b16a-5d9680197512</ObjectId>
              </data>
            </addData>
          </task>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
              <Libraries>
                <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.17.0 (System)" />
                <Library Name="#3SLicense" Namespace="_3S_LICENSE" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)" ResolverGuid="97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b" />
                <Library Name="#CAA Device Diagnosis" Namespace="DED" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CAA Device Diagnosis, 3.5.18.0 (CAA Technical Workgroup)" />
                <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, * (3S - Smart Software Solutions GmbH)" />
                <Library Name="MemoryUtils, 3.5.18.0 (3S - Smart Software Solutions GmbH)" Namespace="MEMUtils" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
                <Library Name="#System_VisuElems" Namespace="VisuElems" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElems, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemMeter" Namespace="VisuElemMeter" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemMeter, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsSpecialControls" Namespace="VisuElemsSpecialControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsSpecialControls, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsWinControls" Namespace="VisuElemsWinControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsWinControls, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemTextEditor" Namespace="VisuElemTextEditor" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTextEditor, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemTrace" Namespace="VisuElemTrace" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTrace, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuNativeControl" Namespace="VisuNativeControl" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuNativeControl, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsAlarm" Namespace="VisuElemsAlarm" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsAlarm, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemCamDisplayer" Namespace="VisuElemCamDisplayer" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemCamDisplayer, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
                  <Parameters>
                    <Parameter Name="GC_POINTS_PER_CAM" Value="100" />
                  </Parameters>
                </Library>
                <Library Name="#System_VisuElem3DPath" Namespace="VisuElem3DPath" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElem3DPath, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
                  <Parameters>
                    <Parameter Name="GC_POINTS_PER_POLYGON" Value="100" />
                  </Parameters>
                </Library>
                <Library Name="#System_VisuElemsDateTime" Namespace="VisuElemsDateTime" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsDateTime, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemXYChart" Namespace="VisuElemXYChart" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemXYChart, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#system_visuinputs" Namespace="visuinputs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="visuinputs, 4.1.0.0 (system)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#VisuDialogs" Namespace="VisuDialogs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="VisuDialogs, * (System)" />
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>7ba61702-9b9d-46af-bab0-2dbc535d117f</ObjectId>
                  </data>
                </addData>
              </Libraries>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
              <BuildProperties>
                <CompilerDefines>GENERATE_OVERLAY_VISU</CompilerDefines>
              </BuildProperties>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>ac4c5ade-dbfe-4184-babc-18a2fa2912b0</ObjectId>
            </data>
          </addData>
        </resource>
        <addData>
          <data name="Device" handleUnknown="discard">
            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
              <DeviceType>
                <DeviceIdentification>
                  <Type>4097</Type>
                  <Id>0000 000a</Id>
                  <Version>3.5.18.20</Version>
                </DeviceIdentification>
                <Connector moduleType="256" interface="Common.PCI" connectorId="0">
                  <HostParameterSet />
                </Connector>
                <DeviceParameterSet />
              </DeviceType>
            </Device>
          </data>
          <data name="configurations" handleUnknown="discard">
            <configurations />
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>bc840afb-a9d6-47f1-b7d8-3629266ececc</ObjectId>
          </data>
        </addData>
      </configuration>
    </configurations>
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
      <Libraries>
        <Library Name="#IecSfc" Namespace="IecSfc" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="IecSfc, 3.4.2.0 (System)" />
        <Library Name="#Analyzation" Namespace="Analyzation" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Analyzation, 3.5.2.0 (System)">
          <Parameters>
            <Parameter Name="TABLE_UPPER_BOUND" Value="15" />
            <Parameter Name="STRING_LENGTH_EXP" Value="255" />
            <Parameter Name="STRING_LENGTH_ADDRESS" Value="20" />
            <Parameter Name="STRING_LENGTH_COMMENT" Value="255" />
            <Parameter Name="STRING_LENGTH_OUTSTRING" Value="255" />
            <Parameter Name="TABLE_SHOW_VALID_ITEMS" Value="FALSE" />
          </Parameters>
        </Library>
        <Library Name="#Standard" Namespace="Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Standard, * (System)" />
        <Library Name="#VisuSymbols" Namespace="VisuSymbols" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="VisuSymbols, 4.1.0.0 (System)" />
        <Library Name="#System_VisuElems" Namespace="VisuElems" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElems, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemMeter" Namespace="VisuElemMeter" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemMeter, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsSpecialControls" Namespace="VisuElemsSpecialControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsSpecialControls, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsWinControls" Namespace="VisuElemsWinControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsWinControls, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemTextEditor" Namespace="VisuElemTextEditor" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTextEditor, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemTrace" Namespace="VisuElemTrace" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTrace, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuNativeControl" Namespace="VisuNativeControl" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuNativeControl, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsAlarm" Namespace="VisuElemsAlarm" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsAlarm, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemCamDisplayer" Namespace="VisuElemCamDisplayer" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemCamDisplayer, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
          <Parameters>
            <Parameter Name="GC_POINTS_PER_CAM" Value="100" />
          </Parameters>
        </Library>
        <Library Name="#System_VisuElem3DPath" Namespace="VisuElem3DPath" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElem3DPath, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
          <Parameters>
            <Parameter Name="GC_POINTS_PER_POLYGON" Value="100" />
          </Parameters>
        </Library>
        <Library Name="#System_VisuElemsDateTime" Namespace="VisuElemsDateTime" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsDateTime, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemXYChart" Namespace="VisuElemXYChart" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemXYChart, 4.1.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#system_visuinputs" Namespace="visuinputs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="visuinputs, 4.1.0.0 (system)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#VisuDialogs" Namespace="VisuDialogs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="VisuDialogs, * (System)" />
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>70bdb135-fcf9-4a3b-ac8e-dcd6fe2b15b6</ObjectId>
          </data>
        </addData>
      </Libraries>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="Project Information" ObjectId="11c0fc3a-9bcf-4dd8-ac38-efb93363e521" />
        <Object Name="CODESYS_Control_Win_V3_x64" ObjectId="26264239-25d9-42f6-bfbc-405ae47d66cf">
          <Object Name="Application" ObjectId="9b73d673-0d3d-4761-a178-a18fbf2ba16b">
            <Object Name="Library Manager" ObjectId="2c026f2c-4f21-4d50-afba-ff7714b58459" />
            <Object Name="SpdRnnr" ObjectId="ee0318c6-770b-4de6-8bcd-235016305f87" />
            <Object Name="VISU_TASK" ObjectId="80ce9d12-d3fa-4a2c-9e8f-7949dca4019a" />
            <Object Name="x01" ObjectId="997d4ea4-d037-4761-8e72-a1459a6cc9ee" />
            <Object Name="x02" ObjectId="98b521f2-6844-4201-9f35-19b3a80f84fd" />
            <Object Name="x04" ObjectId="1057b811-4448-402c-aaf8-7ab4e747d974" />
            <Object Name="x05" ObjectId="855f68d4-5402-4cf3-978e-5d9904afbb66" />
            <Object Name="x06" ObjectId="ddc7248c-dd68-4c25-bf70-0678d6067836" />
            <Object Name="x07" ObjectId="59e326d3-8acb-481f-a4ff-4634aa63bbfc" />
            <Object Name="x08" ObjectId="30f5c258-34d3-4159-90b1-ee1a3a1ba5e1" />
            <Object Name="x09" ObjectId="f2e27f03-48a8-4461-b629-8b56dbbe44ae" />
            <Object Name="x10_1" ObjectId="02c028c3-3a12-4fb6-8a62-c0c556294c87" />
            <Object Name="x11" ObjectId="de137938-48f5-4ea4-a519-5afabd7a6531" />
            <Object Name="x03" ObjectId="5ff92bf5-274a-410c-a7a9-f72b118a853d" />
            <Object Name="x12" ObjectId="e50d90a9-58ed-4afe-9557-a7932f6fb92e" />
            <Object Name="x13" ObjectId="a2a9fad0-3b27-4ae8-a1fe-650a949235e0" />
            <Object Name="x10_2" ObjectId="f702bc47-368b-4739-90f8-919d419d832a" />
            <Object Name="x10_3" ObjectId="cc3dd8e2-1d7a-4403-9411-f0fce93566f1" />
            <Object Name="x00" ObjectId="00096b11-5ad3-43b3-b997-0b85a0532632" />
          </Object>
        </Object>
        <Object Name="Library Manager" ObjectId="70bdb135-fcf9-4a3b-ac8e-dcd6fe2b15b6" />
        <Folder Name="03 - Floating point operations">
          <Object Name="x03_FloatingPointOperations" ObjectId="8ed00d68-6d21-479d-9bfa-1cbb591fa9aa">
            <Object Name="Measure" ObjectId="93cbcdca-7780-47a0-9980-34236baa48b9" />
          </Object>
        </Folder>
        <Folder Name="04 - Function overhead">
          <Object Name="addTwoInts" ObjectId="80915059-aa71-49ba-b84f-ffb0a9f75549" />
          <Object Name="x04_FunctionOverhead" ObjectId="832e84e3-169c-43aa-8871-b0ef2441ec37">
            <Object Name="addTwoNumbers" ObjectId="bec361a3-b449-4cbd-b51d-cb8c313049d9" />
            <Object Name="Measure" ObjectId="21ab4a41-c502-42e4-bf95-e430fdaa73b7" />
          </Object>
        </Folder>
        <Folder Name="01 - Impact of dynamic arrays">
          <Object Name="x01_ImpactOfDynamicArrays" ObjectId="c290fb28-c10d-4c88-ae7d-b83b30f2243a">
            <Object Name="Measure" ObjectId="c675048f-5aa0-45c3-806e-fa3f7b6ccade" />
          </Object>
          <Object Name="calcAvgFixed" ObjectId="a46ac05d-7c39-4a72-b333-457576105ddf" />
        </Folder>
        <Folder Name="06 - SHL over MemCpy">
          <Object Name="x06_ShlVsMemCpy" ObjectId="b1c49280-5ef1-440e-9136-31fd5aa516dc">
            <Object Name="Measure" ObjectId="5664cb8f-8799-4292-bf51-fd94078c7af9" />
          </Object>
        </Folder>
        <Folder Name="TestFramework">
          <Object Name="calcAVG" ObjectId="d361f96d-b405-4f02-94e9-f0734c3f1811" />
          <Object Name="dtSpeedTest" ObjectId="65385f20-c9b3-4afb-b91b-9f5b6a5e2eb7" />
          <Object Name="speedRunner" ObjectId="45bae081-d3b4-42ae-ac00-ec9afd7d0163" />
        </Folder>
        <Folder Name="05 - MemSet over Data Zero">
          <Object Name="x05_MemSetVsDataZeero" ObjectId="b6f25e2b-ec5a-4a35-909a-0f893387acef">
            <Object Name="Measure" ObjectId="428e8d6f-6956-4294-8a2f-bf96435e2fa1" />
          </Object>
          <Object Name="dtTestStruct" ObjectId="974d87b5-4253-4dd8-af42-02d75fec12db" />
        </Folder>
        <Folder Name="02 - Execution speed of PLC languages">
          <Object Name="x02_ExecSpeedOfLanguageTypes" ObjectId="8b838563-ffa0-4f7f-88df-fdf5ef838e0b">
            <Object Name="Measure" ObjectId="b12f24c4-11bf-462f-bab6-6f9040d1116e" />
          </Object>
          <Object Name="addTwoIntsLadder" ObjectId="81976c27-bae7-4ac7-b3be-5a289cfec6a1" />
          <Object Name="addTwoIntsST" ObjectId="2b669961-88b5-4e2c-8aa0-fcd5ea1dc9c6" />
          <Object Name="addTwoIntsFBD" ObjectId="ff1bd7ca-f894-4734-8c56-cab7f420d3e0" />
          <Object Name="addTwoIntsCFC" ObjectId="81fd9d15-6397-42fb-9239-c48bec1ad48d" />
        </Folder>
        <Folder Name="07 - String operations">
          <Object Name="x07_StringOperations" ObjectId="51d6aac5-a3cf-4c60-a30b-f6b3d35ff875">
            <Object Name="Measure" ObjectId="8ab04792-ff24-45f9-8b1e-5e6d8d90039c" />
          </Object>
        </Folder>
        <Folder Name="08 - Operations with booleans">
          <Object Name="x08_CheckingBools" ObjectId="ed37ab8c-e858-41dc-a5e4-96d815c1c338">
            <Object Name="Measure" ObjectId="aab56a0a-5b36-4ad9-bd34-4e2ea44c6832" />
          </Object>
        </Folder>
        <Folder Name="09 - Case versus IF ELSIF">
          <Object Name="x09_CaseVsIfElsif" ObjectId="0f0586c3-201e-474f-b21b-0093897de039">
            <Object Name="returnIndexIfElsif" ObjectId="eb9df3a9-9018-4dac-98aa-4ff0ea2db28c" />
            <Object Name="returnIndexCase" ObjectId="7b9ab763-7b82-4534-9222-af160d259531" />
            <Object Name="Measure" ObjectId="464e96a6-390f-402c-aa0c-5da13403ea1f" />
          </Object>
        </Folder>
        <Folder Name="10 - Bit operations">
          <Object Name="x10_1_BitAccess" ObjectId="55b1e25e-0d71-42e6-8b7f-259c215c353b">
            <Object Name="Measure" ObjectId="e45ffa84-7228-4c2f-81da-6b2a7f93ffb5" />
          </Object>
          <Object Name="dtBitStruct" ObjectId="18cca70b-ac98-43f3-8ffb-8a51e2e4f4e7" />
          <Object Name="x10_3_BitMath" ObjectId="07b9ee7c-3208-404a-96fe-4da4d87dcecd">
            <Object Name="Measure" ObjectId="d094627d-fd6c-43dc-b8a3-0d89f6559c41" />
          </Object>
          <Object Name="x10_2_BitSet" ObjectId="ff2e3e10-a7bd-4ef8-992f-e201ee8b44f5">
            <Object Name="Measure" ObjectId="9ff6ba78-d184-45dc-bba4-a57f28868237" />
          </Object>
          <Object Name="checkBit_bitmask" ObjectId="1410a64b-5933-4e93-81df-c546f078612e" />
          <Object Name="setBit_bitmask" ObjectId="08e5ad85-d29d-43b7-84f8-ef01e7d5504b" />
          <Object Name="clearBit_bitmask" ObjectId="a5ac315e-6fee-41fd-9fe0-b5d61f96492b" />
          <Object Name="setBitToValue_bitmask" ObjectId="67294dfb-3392-43d5-801e-1d31b7ad7628" />
          <Object Name="setBit_dotNot" ObjectId="d6c6c8e6-a8cc-4650-93c7-93548a570652" />
          <Object Name="checkBit_dotNot" ObjectId="b12efb6a-31f4-4685-9b74-6773013cef76" />
          <Object Name="clearBit_dotNot" ObjectId="1e488c7a-35c5-4876-9f6f-248de83ba132" />
          <Object Name="checkBit_bitStruct" ObjectId="dd822e65-2c99-4348-a2c9-652be475a596" />
          <Object Name="clearBit_bitStruct" ObjectId="5cac58e1-cd70-470f-8830-a8d7f4f859bc" />
          <Object Name="setBit_bitStruct" ObjectId="e2299132-fdf6-41ce-a918-94975bae8dca" />
          <Object Name="setBitToValue_bitStruct" ObjectId="8301b7b6-0574-4fd5-8ec5-2a574edf7903" />
          <Object Name="setBitToValue_dotNot" ObjectId="79f63c46-1373-4270-b495-53c4d47f0d90" />
        </Folder>
        <Object Name="CODESYS_Control_RTE_V3_x64" ObjectId="bc840afb-a9d6-47f1-b7d8-3629266ececc">
          <Object Name="Application" ObjectId="ac4c5ade-dbfe-4184-babc-18a2fa2912b0">
            <Object Name="Library Manager" ObjectId="7ba61702-9b9d-46af-bab0-2dbc535d117f" />
            <Object Name="x01" ObjectId="624514e7-846d-4395-b0c9-cc8d643e4e7e" />
            <Object Name="x04" ObjectId="37f779ef-f9f4-4f8e-aa8f-2087bd9f1c83" />
            <Object Name="SpdRnnr" ObjectId="bffd86d5-f7f6-45b6-b1e2-b8a4bd04fcb5" />
            <Object Name="x06" ObjectId="9048ce15-c376-4ddd-af95-219f10c1fa36" />
            <Object Name="x02" ObjectId="5c43b717-d45d-46d0-9d7c-fe9b7781c205" />
            <Object Name="VISU_TASK" ObjectId="0a985513-bde5-42f9-949f-b2695f84404b" />
            <Object Name="x07" ObjectId="d0ce08e0-f215-4412-a152-95c78bf403c8" />
            <Object Name="x08" ObjectId="f39d1bd0-ed6d-4ead-94cd-837863ae9f63" />
            <Object Name="x10_1" ObjectId="d43a3d5c-e4fc-4ceb-a2de-a1d3a1c18543" />
            <Object Name="x09" ObjectId="01f0d965-9640-4229-91ed-e5b76d977101" />
            <Object Name="x05" ObjectId="e9539de3-8dad-4da7-bc06-773e6a8a249e" />
            <Object Name="x12" ObjectId="1cf14ab6-6b0c-4260-af74-a1f6d07e15ba" />
            <Object Name="x13" ObjectId="d97f8462-dc15-49d5-a1ad-a62c5009be6f" />
            <Object Name="x11" ObjectId="e24bea1d-d16c-461f-862f-2ddff6852951" />
            <Object Name="x03" ObjectId="b617d5fc-09c8-4ada-b38f-a4d466956dd0" />
            <Object Name="x10_2" ObjectId="3d2cca12-07fa-4f41-a972-3f46c5bafaf4" />
            <Object Name="x10_3" ObjectId="0458cfee-014c-44a1-8231-ad30ebde6b4d" />
            <Object Name="x00" ObjectId="590ef554-99b8-488e-b16a-5d9680197512" />
          </Object>
        </Object>
        <Folder Name="00 - MIPS - FLOPS">
          <Object Name="calcMIPS" ObjectId="62bde692-16ea-41fa-843c-03c01b127ac5" />
          <Object Name="calcFLOPS" ObjectId="035c77cc-f4dd-431c-b736-ab56a3b26207" />
          <Object Name="x00_CalcMIPS_FLOPS" ObjectId="c49218d9-bfaa-4efe-9d56-b5df197b1a3b" />
        </Folder>
        <Folder Name="11 - Calculation in FOR loop declaration">
          <Object Name="x11_CalcInForLoppDecl" ObjectId="0d36a265-629d-4737-a080-598f91f7a935">
            <Object Name="Measure" ObjectId="c2344213-3d0a-494f-b6da-f0287613fd3e" />
          </Object>
        </Folder>
        <Folder Name="12 - Bool Array to ByteArray">
          <Object Name="x12_BoolArrayToByteArray" ObjectId="2eab04f9-8124-4db4-ae4b-22d6bb09d6ea">
            <Object Name="Measure" ObjectId="52f1730e-51c2-40cb-b751-f2b5ace875fe" />
          </Object>
          <Object Name="BOOLARR_TO_BYTES" ObjectId="3e0a25b4-756e-4815-81c0-36745d28e14a" />
          <Object Name="BOOLARR_TO_BYTES2" ObjectId="51f99054-eb38-4f39-9943-263b385d74f8" />
        </Folder>
        <Folder Name="13 - Byte array to Boolean32">
          <Object Name="x13_ByteArrayToBool32" ObjectId="74f165ea-ef07-4399-81f4-5a22d69d1c4c">
            <Object Name="Measure" ObjectId="3bb16b62-a7d2-4e80-a5f5-d17bef7f2b0e" />
          </Object>
          <Object Name="UnpackBytesToBool32" ObjectId="6d3db079-17dd-4cb1-a422-91fc1faa4560" />
          <Object Name="UnpackBytesToBool32_2" ObjectId="00e46ab0-b561-402e-a609-aa635fec6ce7" />
        </Folder>
      </ProjectStructure>
    </data>
  </addData>
</project>